DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=18)
           2	LOAD_FAST(arg=0, lineno=18)
           4	LOAD_CONST(arg=1, lineno=18)
           6	LOAD_FAST(arg=0, lineno=18)
           8	BINARY_ADD(arg=None, lineno=18)
          10	BINARY_TRUE_DIVIDE(arg=None, lineno=18)
          12	RETURN_VALUE(arg=None, lineno=18)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=18)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=18)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=18)
DEBUG:numba.core.byteflow:stack ['$X2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=18)
DEBUG:numba.core.byteflow:stack ['$X2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_ADD(arg=None, lineno=18)
DEBUG:numba.core.byteflow:stack ['$X2.0', '$const4.1', '$X6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=18)
DEBUG:numba.core.byteflow:stack ['$X2.0', '$8binary_add.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=18)
DEBUG:numba.core.byteflow:stack ['$10binary_true_divide.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$X2.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$X6.2'}), (8, {'lhs': '$const4.1', 'rhs': '$X6.2', 'res': '$8binary_add.3'}), (10, {'lhs': '$X2.0', 'rhs': '$8binary_add.3', 'res': '$10binary_true_divide.4'}), (12, {'retval': '$10binary_true_divide.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    X = arg(0, name=X)                       ['X']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8binary_add.3 = $const4.1 + X           ['$8binary_add.3', '$const4.1', 'X']
    $10binary_true_divide.4 = X / $8binary_add.3 ['$10binary_true_divide.4', '$8binary_add.3', 'X']
    $12return_value.5 = cast(value=$10binary_true_divide.4) ['$10binary_true_divide.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661b265e0>
DEBUG:numba.core.ssa:on stmt: X = arg(0, name=X)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $8binary_add.3 = $const4.1 + X
DEBUG:numba.core.ssa:on stmt: $10binary_true_divide.4 = X / $8binary_add.3
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10binary_true_divide.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_true_divide.4': [<numba.core.ir.Assign object at 0x7fa661b2e340>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7fa661b2e1c0>],
             '$8binary_add.3': [<numba.core.ir.Assign object at 0x7fa661b2e610>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7fa661b2eb50>],
             'X': [<numba.core.ir.Assign object at 0x7fa661b26850>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=18)
           2	LOAD_FAST(arg=0, lineno=18)
           4	LOAD_CONST(arg=1, lineno=1)
           6	LOAD_FAST(arg=0, lineno=18)
           8	BINARY_ADD(arg=None, lineno=1)
          10	BINARY_TRUE_DIVIDE(arg=None, lineno=1)
          12	RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=18)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=18)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack ['$X_12.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=18)
DEBUG:numba.core.byteflow:stack ['$X_12.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_ADD(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$X_12.0', '$const4.1', '$X_16.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$X_12.0', '$8binary_add.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$10binary_true_divide.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$X_12.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$X_16.2'}), (8, {'lhs': '$const4.1', 'rhs': '$X_16.2', 'res': '$8binary_add.3'}), (10, {'lhs': '$X_12.0', 'rhs': '$8binary_add.3', 'res': '$10binary_true_divide.4'}), (12, {'retval': '$10binary_true_divide.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    X_1 = arg(0, name=X_1)                   ['X_1']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8binary_add.3 = $const4.1 + X_1         ['$8binary_add.3', '$const4.1', 'X_1']
    $10binary_true_divide.4 = X_1 / $8binary_add.3 ['$10binary_true_divide.4', '$8binary_add.3', 'X_1']
    $12return_value.5 = cast(value=$10binary_true_divide.4) ['$10binary_true_divide.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a509d0>
DEBUG:numba.core.ssa:on stmt: X_1 = arg(0, name=X_1)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $8binary_add.3 = $const4.1 + X_1
DEBUG:numba.core.ssa:on stmt: $10binary_true_divide.4 = X_1 / $8binary_add.3
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10binary_true_divide.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_true_divide.4': [<numba.core.ir.Assign object at 0x7fa661a50f10>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7fa661a520d0>],
             '$8binary_add.3': [<numba.core.ir.Assign object at 0x7fa661a50580>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7fa661a50130>],
             'X_1': [<numba.core.ir.Assign object at 0x7fa661a500a0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=205)
           2	LOAD_FAST(arg=0, lineno=205)
           4	LOAD_FAST(arg=2, lineno=205)
           6	COMPARE_OP(arg=4, lineno=205)
           8	POP_JUMP_IF_FALSE(arg=14, lineno=205)
          10	LOAD_CONST(arg=1, lineno=208)
          12	RETURN_VALUE(arg=None, lineno=208)
>         14	LOAD_CONST(arg=1, lineno=210)
          16	STORE_FAST(arg=4, lineno=210)
          18	LOAD_FAST(arg=2, lineno=211)
          20	LOAD_FAST(arg=0, lineno=211)
          22	BINARY_SUBTRACT(arg=None, lineno=211)
          24	STORE_FAST(arg=5, lineno=211)
>         26	LOAD_FAST(arg=4, lineno=212)
          28	LOAD_FAST(arg=0, lineno=212)
          30	COMPARE_OP(arg=0, lineno=212)
          32	POP_JUMP_IF_FALSE(arg=120, lineno=212)
          34	LOAD_FAST(arg=1, lineno=213)
          36	LOAD_FAST(arg=4, lineno=213)
          38	BINARY_SUBSCR(arg=None, lineno=213)
          40	STORE_FAST(arg=6, lineno=213)
          42	LOAD_FAST(arg=3, lineno=214)
          44	LOAD_FAST(arg=5, lineno=214)
          46	BINARY_SUBSCR(arg=None, lineno=214)
          48	STORE_FAST(arg=7, lineno=214)
          50	LOAD_FAST(arg=7, lineno=217)
          52	LOAD_CONST(arg=2, lineno=217)
          54	COMPARE_OP(arg=3, lineno=217)
          56	POP_JUMP_IF_FALSE(arg=86, lineno=217)
          58	LOAD_FAST(arg=6, lineno=221)
          60	LOAD_FAST(arg=7, lineno=221)
          62	COMPARE_OP(arg=3, lineno=221)
          64	POP_JUMP_IF_FALSE(arg=102, lineno=221)
          66	LOAD_FAST(arg=6, lineno=221)
          68	LOAD_CONST(arg=2, lineno=221)
          70	COMPARE_OP(arg=3, lineno=221)
          72	POP_JUMP_IF_FALSE(arg=102, lineno=221)
          74	LOAD_FAST(arg=5, lineno=222)
          76	LOAD_CONST(arg=2, lineno=222)
          78	BINARY_ADD(arg=None, lineno=222)
          80	UNARY_NEGATIVE(arg=None, lineno=222)
          82	RETURN_VALUE(arg=None, lineno=222)
          84	JUMP_FORWARD(arg=16, lineno=222)
>         86	LOAD_FAST(arg=6, lineno=223)
          88	LOAD_CONST(arg=2, lineno=223)
          90	COMPARE_OP(arg=3, lineno=223)
          92	POP_JUMP_IF_FALSE(arg=102, lineno=223)
          94	LOAD_FAST(arg=6, lineno=225)
          96	LOAD_FAST(arg=3, lineno=225)
          98	LOAD_FAST(arg=5, lineno=225)
         100	STORE_SUBSCR(arg=None, lineno=225)
>        102	LOAD_FAST(arg=4, lineno=226)
         104	LOAD_CONST(arg=2, lineno=226)
         106	INPLACE_ADD(arg=None, lineno=226)
         108	STORE_FAST(arg=4, lineno=226)
         110	LOAD_FAST(arg=5, lineno=227)
         112	LOAD_CONST(arg=2, lineno=227)
         114	INPLACE_ADD(arg=None, lineno=227)
         116	STORE_FAST(arg=5, lineno=227)
         118	JUMP_ABSOLUTE(arg=26, lineno=227)
>        120	LOAD_FAST(arg=5, lineno=228)
         122	RETURN_VALUE(arg=None, lineno=228)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=205)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=205)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=2, lineno=205)
DEBUG:numba.core.byteflow:stack ['$src_ndim2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=205)
DEBUG:numba.core.byteflow:stack ['$src_ndim2.0', '$dest_ndim4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=14, lineno=205)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=208)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=208)
DEBUG:numba.core.byteflow:stack ['$const10.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=210)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=210)
DEBUG:numba.core.byteflow:stack ['$const14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=211)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=211)
DEBUG:numba.core.byteflow:stack ['$dest_ndim18.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBTRACT(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$dest_ndim18.1', '$src_ndim20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_FAST(arg=5, lineno=211)
DEBUG:numba.core.byteflow:stack ['$22binary_subtract.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=4, lineno=212)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=212)
DEBUG:numba.core.byteflow:stack ['$src_index26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=212)
DEBUG:numba.core.byteflow:stack ['$src_index26.0', '$src_ndim28.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=120, lineno=212)
DEBUG:numba.core.byteflow:stack ['$30compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=120, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=213)
DEBUG:numba.core.byteflow:stack ['$src_shape34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=213)
DEBUG:numba.core.byteflow:stack ['$src_shape34.0', '$src_index36.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=6, lineno=213)
DEBUG:numba.core.byteflow:stack ['$38binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=5, lineno=214)
DEBUG:numba.core.byteflow:stack ['$dest_shape42.3']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=214)
DEBUG:numba.core.byteflow:stack ['$dest_shape42.3', '$dest_index44.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_FAST(arg=7, lineno=214)
DEBUG:numba.core.byteflow:stack ['$46binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=7, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=217)
DEBUG:numba.core.byteflow:stack ['$dest_dim_size50.6']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=COMPARE_OP(arg=3, lineno=217)
DEBUG:numba.core.byteflow:stack ['$dest_dim_size50.6', '$const52.7']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=86, lineno=217)
DEBUG:numba.core.byteflow:stack ['$54compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=5, lineno=228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=RETURN_VALUE(arg=None, lineno=228)
DEBUG:numba.core.byteflow:stack ['$dest_index120.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=7, lineno=221)
DEBUG:numba.core.byteflow:stack ['$src_dim_size58.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=COMPARE_OP(arg=3, lineno=221)
DEBUG:numba.core.byteflow:stack ['$src_dim_size58.0', '$dest_dim_size60.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=102, lineno=221)
DEBUG:numba.core.byteflow:stack ['$62compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=66 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=6, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=223)
DEBUG:numba.core.byteflow:stack ['$src_dim_size86.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=COMPARE_OP(arg=3, lineno=223)
DEBUG:numba.core.byteflow:stack ['$src_dim_size86.0', '$const88.1']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=102, lineno=223)
DEBUG:numba.core.byteflow:stack ['$90compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$src_dim_size66.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=221)
DEBUG:numba.core.byteflow:stack ['$src_dim_size66.0', '$const68.1']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=102, lineno=221)
DEBUG:numba.core.byteflow:stack ['$70compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=4, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=226)
DEBUG:numba.core.byteflow:stack ['$src_index102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=INPLACE_ADD(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$src_index102.0', '$const104.1']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=STORE_FAST(arg=4, lineno=226)
DEBUG:numba.core.byteflow:stack ['$106inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=227)
DEBUG:numba.core.byteflow:stack ['$dest_index110.3']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=INPLACE_ADD(arg=None, lineno=227)
DEBUG:numba.core.byteflow:stack ['$dest_index110.3', '$const112.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=STORE_FAST(arg=5, lineno=227)
DEBUG:numba.core.byteflow:stack ['$114inplace_add.5']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=JUMP_ABSOLUTE(arg=26, lineno=227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=6, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=3, lineno=225)
DEBUG:numba.core.byteflow:stack ['$src_dim_size94.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=225)
DEBUG:numba.core.byteflow:stack ['$src_dim_size94.0', '$dest_shape96.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=STORE_SUBSCR(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$src_dim_size94.0', '$dest_shape96.1', '$dest_index98.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=222)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=222)
DEBUG:numba.core.byteflow:stack ['$dest_index74.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BINARY_ADD(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$dest_index74.0', '$const76.1']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=UNARY_NEGATIVE(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$78binary_add.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$80unary_negative.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$src_ndim2.0'}), (4, {'res': '$dest_ndim4.1'}), (6, {'lhs': '$src_ndim2.0', 'rhs': '$dest_ndim4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$const10.0'}), (12, {'retval': '$const10.0', 'castval': '$12return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$const14.0'}), (16, {'value': '$const14.0'}), (18, {'res': '$dest_ndim18.1'}), (20, {'res': '$src_ndim20.2'}), (22, {'lhs': '$dest_ndim18.1', 'rhs': '$src_ndim20.2', 'res': '$22binary_subtract.3'}), (24, {'value': '$22binary_subtract.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$src_index26.0'}), (28, {'res': '$src_ndim28.1'}), (30, {'lhs': '$src_index26.0', 'rhs': '$src_ndim28.1', 'res': '$30compare_op.2'}), (32, {'pred': '$30compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 120: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$src_shape34.0'}), (36, {'res': '$src_index36.1'}), (38, {'index': '$src_index36.1', 'target': '$src_shape34.0', 'res': '$38binary_subscr.2'}), (40, {'value': '$38binary_subscr.2'}), (42, {'res': '$dest_shape42.3'}), (44, {'res': '$dest_index44.4'}), (46, {'index': '$dest_index44.4', 'target': '$dest_shape42.3', 'res': '$46binary_subscr.5'}), (48, {'value': '$46binary_subscr.5'}), (50, {'res': '$dest_dim_size50.6'}), (52, {'res': '$const52.7'}), (54, {'lhs': '$dest_dim_size50.6', 'rhs': '$const52.7', 'res': '$54compare_op.8'}), (56, {'pred': '$54compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$src_dim_size58.0'}), (60, {'res': '$dest_dim_size60.1'}), (62, {'lhs': '$src_dim_size58.0', 'rhs': '$dest_dim_size60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$src_dim_size66.0'}), (68, {'res': '$const68.1'}), (70, {'lhs': '$src_dim_size66.0', 'rhs': '$const68.1', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$dest_index74.0'}), (76, {'res': '$const76.1'}), (78, {'lhs': '$dest_index74.0', 'rhs': '$const76.1', 'res': '$78binary_add.2'}), (80, {'value': '$78binary_add.2', 'res': '$80unary_negative.3'}), (82, {'retval': '$80unary_negative.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$src_dim_size86.0'}), (88, {'res': '$const88.1'}), (90, {'lhs': '$src_dim_size86.0', 'rhs': '$const88.1', 'res': '$90compare_op.2'}), (92, {'pred': '$90compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$src_dim_size94.0'}), (96, {'res': '$dest_shape96.1'}), (98, {'res': '$dest_index98.2'}), (100, {'target': '$dest_shape96.1', 'index': '$dest_index98.2', 'value': '$src_dim_size94.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$src_index102.0'}), (104, {'res': '$const104.1'}), (106, {'lhs': '$src_index102.0', 'rhs': '$const104.1', 'res': '$106inplace_add.2'}), (108, {'value': '$106inplace_add.2'}), (110, {'res': '$dest_index110.3'}), (112, {'res': '$const112.4'}), (114, {'lhs': '$dest_index110.3', 'rhs': '$const112.4', 'res': '$114inplace_add.5'}), (116, {'value': '$114inplace_add.5'}), (118, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$dest_index120.0'}), (122, {'retval': '$dest_index120.0', 'castval': '$122return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    src_ndim = arg(0, name=src_ndim)         ['src_ndim']
    src_shape = arg(1, name=src_shape)       ['src_shape']
    dest_ndim = arg(2, name=dest_ndim)       ['dest_ndim']
    dest_shape = arg(3, name=dest_shape)     ['dest_shape']
    $6compare_op.2 = src_ndim > dest_ndim    ['$6compare_op.2', 'dest_ndim', 'src_ndim']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.0 = const(int, 0)               ['$const10.0']
    $12return_value.1 = cast(value=$const10.0) ['$12return_value.1', '$const10.0']
    return $12return_value.1                 ['$12return_value.1']
label 14:
    src_index = const(int, 0)                ['src_index']
    dest_index = dest_ndim - src_ndim        ['dest_index', 'dest_ndim', 'src_ndim']
    jump 26                                  []
label 26:
    $30compare_op.2 = src_index < src_ndim   ['$30compare_op.2', 'src_index', 'src_ndim']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None) ['$30compare_op.2', '$32pred', 'bool32']
    branch $32pred, 34, 120                  ['$32pred']
label 34:
    src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>) ['src_dim_size', 'src_index', 'src_shape']
    dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>) ['dest_dim_size', 'dest_index', 'dest_shape']
    $const52.7 = const(int, 1)               ['$const52.7']
    $54compare_op.8 = dest_dim_size != $const52.7 ['$54compare_op.8', '$const52.7', 'dest_dim_size']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None) ['$54compare_op.8', '$56pred', 'bool56']
    branch $56pred, 58, 86                   ['$56pred']
label 58:
    $62compare_op.2 = src_dim_size != dest_dim_size ['$62compare_op.2', 'dest_dim_size', 'src_dim_size']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 102                  ['$64pred']
label 66:
    $const68.1 = const(int, 1)               ['$const68.1']
    $70compare_op.2 = src_dim_size != $const68.1 ['$70compare_op.2', '$const68.1', 'src_dim_size']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 102                  ['$72pred']
label 74:
    $const76.1 = const(int, 1)               ['$const76.1']
    $78binary_add.2 = dest_index + $const76.1 ['$78binary_add.2', '$const76.1', 'dest_index']
    $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2) ['$78binary_add.2', '$80unary_negative.3']
    $82return_value.4 = cast(value=$80unary_negative.3) ['$80unary_negative.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']
label 86:
    $const88.1 = const(int, 1)               ['$const88.1']
    $90compare_op.2 = src_dim_size != $const88.1 ['$90compare_op.2', '$const88.1', 'src_dim_size']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 102                  ['$92pred']
label 94:
    dest_shape[dest_index] = src_dim_size    ['dest_index', 'dest_shape', 'src_dim_size']
    jump 102                                 []
label 102:
    $const104.1 = const(int, 1)              ['$const104.1']
    $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined) ['$106inplace_add.2', '$const104.1', 'src_index']
    src_index = $106inplace_add.2            ['$106inplace_add.2', 'src_index']
    $const112.4 = const(int, 1)              ['$const112.4']
    $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined) ['$114inplace_add.5', '$const112.4', 'dest_index']
    dest_index = $114inplace_add.5           ['$114inplace_add.5', 'dest_index']
    jump 26                                  []
label 120:
    $122return_value.1 = cast(value=dest_index) ['$122return_value.1', 'dest_index']
    return $122return_value.1                ['$122return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $30compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 120
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $const104.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661a52d60>
DEBUG:numba.core.ssa:on stmt: $122return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $122return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106inplace_add.2': [<numba.core.ir.Assign object at 0x7fa661a1fbb0>],
             '$114inplace_add.5': [<numba.core.ir.Assign object at 0x7fa661a210d0>],
             '$122return_value.1': [<numba.core.ir.Assign object at 0x7fa661a214f0>],
             '$12return_value.1': [<numba.core.ir.Assign object at 0x7fa661a8afd0>],
             '$30compare_op.2': [<numba.core.ir.Assign object at 0x7fa661a18c10>],
             '$32pred': [<numba.core.ir.Assign object at 0x7fa661a18eb0>],
             '$54compare_op.8': [<numba.core.ir.Assign object at 0x7fa661a1b430>],
             '$56pred': [<numba.core.ir.Assign object at 0x7fa661a1b6d0>],
             '$62compare_op.2': [<numba.core.ir.Assign object at 0x7fa661a1b910>],
             '$64pred': [<numba.core.ir.Assign object at 0x7fa661a1bbb0>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x7fa661a8a9d0>],
             '$70compare_op.2': [<numba.core.ir.Assign object at 0x7fa661a1d070>],
             '$72pred': [<numba.core.ir.Assign object at 0x7fa661a1d310>],
             '$78binary_add.2': [<numba.core.ir.Assign object at 0x7fa661a1d7f0>],
             '$80unary_negative.3': [<numba.core.ir.Assign object at 0x7fa661a1d970>],
             '$82return_value.4': [<numba.core.ir.Assign object at 0x7fa661a1daf0>],
             '$8pred': [<numba.core.ir.Assign object at 0x7fa661a8ac70>],
             '$90compare_op.2': [<numba.core.ir.Assign object at 0x7fa661a1dfd0>],
             '$92pred': [<numba.core.ir.Assign object at 0x7fa661a1f2b0>],
             '$const10.0': [<numba.core.ir.Assign object at 0x7fa661a8ae50>],
             '$const104.1': [<numba.core.ir.Assign object at 0x7fa661a1fa30>],
             '$const112.4': [<numba.core.ir.Assign object at 0x7fa661a1ff10>],
             '$const52.7': [<numba.core.ir.Assign object at 0x7fa661a5d280>],
             '$const68.1': [<numba.core.ir.Assign object at 0x7fa661a1beb0>],
             '$const76.1': [<numba.core.ir.Assign object at 0x7fa661a1d670>],
             '$const88.1': [<numba.core.ir.Assign object at 0x7fa661a1de50>],
             'bool32': [<numba.core.ir.Assign object at 0x7fa661a18d90>],
             'bool56': [<numba.core.ir.Assign object at 0x7fa661a1b5b0>],
             'bool64': [<numba.core.ir.Assign object at 0x7fa661a1ba90>],
             'bool72': [<numba.core.ir.Assign object at 0x7fa661a1d1f0>],
             'bool8': [<numba.core.ir.Assign object at 0x7fa661a8ab50>],
             'bool92': [<numba.core.ir.Assign object at 0x7fa661a1f190>],
             'dest_dim_size': [<numba.core.ir.Assign object at 0x7fa661a82c40>],
             'dest_index': [<numba.core.ir.Assign object at 0x7fa661a18790>,
                            <numba.core.ir.Assign object at 0x7fa661a21190>],
             'dest_ndim': [<numba.core.ir.Assign object at 0x7fa661a8a4f0>],
             'dest_shape': [<numba.core.ir.Assign object at 0x7fa661a8a610>],
             'src_dim_size': [<numba.core.ir.Assign object at 0x7fa661a1b310>],
             'src_index': [<numba.core.ir.Assign object at 0x7fa661a182b0>,
                           <numba.core.ir.Assign object at 0x7fa661a1fc70>],
             'src_ndim': [<numba.core.ir.Assign object at 0x7fa661a8a0d0>],
             'src_shape': [<numba.core.ir.Assign object at 0x7fa661a8a3d0>]})
DEBUG:numba.core.ssa:SSA violators {'dest_index', 'src_index'}
DEBUG:numba.core.ssa:Fix SSA violator on var dest_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:first assign: dest_index
DEBUG:numba.core.ssa:replaced with: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $30compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 120
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const104.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $114inplace_add.5
DEBUG:numba.core.ssa:replaced with: dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $122return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $122return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7fa661a8b490>],
             102: [<numba.core.ir.Assign object at 0x7fa661a64d90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $30compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 120
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 26 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:insert phi node dest_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 26
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:replaced with: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$78binary_add.2 = dest_index + $const76.1
DEBUG:numba.core.ssa:find_def_from_top label 74
DEBUG:numba.core.ssa:idom 66 from label 74
DEBUG:numba.core.ssa:find_def_from_bottom label 66
DEBUG:numba.core.ssa:find_def_from_top label 66
DEBUG:numba.core.ssa:idom 58 from label 66
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 34 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 26 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:replaced with: $78binary_add.2 = dest_index.2 + $const76.1
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 86 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 34 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 26 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:replaced with: dest_shape[dest_index.2] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $const104.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 34 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 26 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:replaced with: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661a8b310>
DEBUG:numba.core.ssa:on stmt: $122return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$122return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 26 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:replaced with: $122return_value.1 = cast(value=dest_index.2)
DEBUG:numba.core.ssa:on stmt: return $122return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var src_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:first assign: src_index
DEBUG:numba.core.ssa:replaced with: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: dest_index.2 = phi(incoming_values=[Var(dest_index.1, npyimpl.py:227), Var(dest_index, npyimpl.py:211)], incoming_blocks=[102, 14])
DEBUG:numba.core.ssa:on stmt: $30compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 120
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index.2 + $const76.1
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index.2] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: $const104.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $106inplace_add.2
DEBUG:numba.core.ssa:replaced with: src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fa661a641c0>
DEBUG:numba.core.ssa:on stmt: $122return_value.1 = cast(value=dest_index.2)
DEBUG:numba.core.ssa:on stmt: return $122return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7fa661a64040>],
             102: [<numba.core.ir.Assign object at 0x7fa661a21ca0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:205),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: dest_index.2 = phi(incoming_values=[Var(dest_index.1, npyimpl.py:227), Var(dest_index, npyimpl.py:211)], incoming_blocks=[102, 14])
DEBUG:numba.core.ssa:on stmt: $30compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$30compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:insert phi node src_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 26
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def src_index = const(int, 0)
DEBUG:numba.core.ssa:replaced with: $30compare_op.2 = src_index.2 < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.2, func=bool32, args=(Var($30compare_op.2, npyimpl.py:212),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 120
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='src_index' stmt=src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 26 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:replaced with: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:217),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:221),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index.2 + $const76.1
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:223),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index.2] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: $const104.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 34 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 26 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:replaced with: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const112.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fa661ad5d00>
DEBUG:numba.core.ssa:on stmt: $122return_value.1 = cast(value=dest_index.2)
DEBUG:numba.core.ssa:on stmt: return $122return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3664)
           2	LOAD_FAST(arg=0, lineno=3664)
           4	LOAD_METHOD(arg=0, lineno=3664)
           6	LOAD_FAST(arg=1, lineno=3664)
           8	LOAD_FAST(arg=2, lineno=3664)
          10	CALL_METHOD(arg=2, lineno=3664)
          12	RETURN_VALUE(arg=None, lineno=3664)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3664)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3664)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$arrtype2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$size6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$size6.2', '$align8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:3664), Var(align, arrayobj.py:3664)], kws=(), vararg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661964e80>
DEBUG:numba.core.ssa:on stmt: arrtype = arg(0, name=arrtype)
DEBUG:numba.core.ssa:on stmt: size = arg(1, name=size)
DEBUG:numba.core.ssa:on stmt: align = arg(2, name=align)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:3664), Var(align, arrayobj.py:3664)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_method.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x7fa6619ee4c0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7fa6619ee610>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fa6619dc970>],
             'align': [<numba.core.ir.Assign object at 0x7fa6619cc700>],
             'arrtype': [<numba.core.ir.Assign object at 0x7fa6619e4e50>],
             'size': [<numba.core.ir.Assign object at 0x7fa6619cc910>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3657)
           2	LOAD_GLOBAL(arg=0, lineno=3657)
           4	LOAD_FAST(arg=1, lineno=3657)
           6	LOAD_FAST(arg=2, lineno=3657)
           8	CALL_FUNCTION(arg=2, lineno=3657)
          10	RETURN_VALUE(arg=None, lineno=3657)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3657)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3657)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=3657)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=3657)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$allocsize4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3657)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3657)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:3657), Var(align, arrayobj.py:3657)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6619de970>
DEBUG:numba.core.ssa:on stmt: cls = arg(0, name=cls)
DEBUG:numba.core.ssa:on stmt: allocsize = arg(1, name=allocsize)
DEBUG:numba.core.ssa:on stmt: align = arg(2, name=align)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
DEBUG:numba.core.ssa:on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:3657), Var(align, arrayobj.py:3657)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10return_value.4 = cast(value=$8call_function.3)
DEBUG:numba.core.ssa:on stmt: return $10return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x7fa6619689a0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fa661968d00>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x7fa661979130>],
             'align': [<numba.core.ir.Assign object at 0x7fa661968b80>],
             'allocsize': [<numba.core.ir.Assign object at 0x7fa6619eec10>],
             'cls': [<numba.core.ir.Assign object at 0x7fa6619ee910>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=20)
           2	LOAD_GLOBAL(arg=0, lineno=20)
           4	LOAD_FAST(arg=4, lineno=20)
           6	LOAD_ATTR(arg=1, lineno=20)
           8	LOAD_CONST(arg=1, lineno=20)
          10	BINARY_SUBSCR(arg=None, lineno=20)
          12	CALL_FUNCTION(arg=1, lineno=20)
          14	GET_ITER(arg=None, lineno=20)
>         16	FOR_ITER(arg=40, lineno=20)
          18	STORE_FAST(arg=5, lineno=20)
          20	LOAD_FAST(arg=4, lineno=21)
          22	LOAD_FAST(arg=5, lineno=21)
          24	BINARY_SUBSCR(arg=None, lineno=21)
          26	STORE_FAST(arg=6, lineno=21)
          28	LOAD_GLOBAL(arg=2, lineno=22)
          30	LOAD_METHOD(arg=3, lineno=22)
          32	LOAD_FAST(arg=2, lineno=22)
          34	LOAD_FAST(arg=0, lineno=22)
          36	LOAD_FAST(arg=6, lineno=22)
          38	BINARY_SUBSCR(arg=None, lineno=22)
          40	BINARY_ADD(arg=None, lineno=22)
          42	LOAD_FAST(arg=3, lineno=22)
          44	CALL_METHOD(arg=2, lineno=22)
          46	LOAD_METHOD(arg=4, lineno=22)
          48	CALL_METHOD(arg=0, lineno=22)
          50	LOAD_FAST(arg=1, lineno=22)
          52	LOAD_FAST(arg=5, lineno=22)
          54	STORE_SUBSCR(arg=None, lineno=22)
          56	JUMP_ABSOLUTE(arg=16, lineno=22)
>         58	LOAD_CONST(arg=0, lineno=22)
          60	RETURN_VALUE(arg=None, lineno=22)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=20)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=20)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=4, lineno=20)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$idxs4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=20)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$const8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=1, lineno=20)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$10binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=GET_ITER(arg=None, lineno=20)
DEBUG:numba.core.byteflow:stack ['$12call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$14get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi16.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=FOR_ITER(arg=40, lineno=20)
DEBUG:numba.core.byteflow:stack ['$phi16.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=0, lineno=22)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=22)
DEBUG:numba.core.byteflow:stack ['$const58.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=5, lineno=20)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=21)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=5, lineno=21)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$idxs20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$idxs20.2', '$i22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=6, lineno=21)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$24binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=3, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$28load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=2, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$30load_method.6']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$30load_method.6', '$current_values32.7']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=6, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$30load_method.6', '$current_values32.7', '$X34.8']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$30load_method.6', '$current_values32.7', '$X34.8', '$idx36.9']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_ADD(arg=None, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$30load_method.6', '$current_values32.7', '$38binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$30load_method.6', '$40binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL_METHOD(arg=2, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$30load_method.6', '$40binary_add.11', '$max_values42.12']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_METHOD(arg=4, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$44call_method.13']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=CALL_METHOD(arg=0, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$46load_method.14']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$48call_method.15']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$48call_method.15', '$gains50.16']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_SUBSCR(arg=None, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$48call_method.15', '$gains50.16', '$i52.17']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=16, lineno=22)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=58 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi16.0': {('$14get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.6'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$idxs4.1'}), (6, {'item': '$idxs4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'index': '$const8.3', 'target': '$6load_attr.2', 'res': '$10binary_subscr.4'}), (12, {'func': '$2load_global.0', 'args': ['$10binary_subscr.4'], 'res': '$12call_function.5'}), (14, {'value': '$12call_function.5', 'res': '$14get_iter.6'})), outgoing_phis={'$phi16.0': '$14get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 18: ('$phi16.0', '$16for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$idxs20.2'}), (22, {'res': '$i22.3'}), (24, {'index': '$i22.3', 'target': '$idxs20.2', 'res': '$24binary_subscr.4'}), (26, {'value': '$24binary_subscr.4'}), (28, {'res': '$28load_global.5'}), (30, {'item': '$28load_global.5', 'res': '$30load_method.6'}), (32, {'res': '$current_values32.7'}), (34, {'res': '$X34.8'}), (36, {'res': '$idx36.9'}), (38, {'index': '$idx36.9', 'target': '$X34.8', 'res': '$38binary_subscr.10'}), (40, {'lhs': '$current_values32.7', 'rhs': '$38binary_subscr.10', 'res': '$40binary_add.11'}), (42, {'res': '$max_values42.12'}), (44, {'func': '$30load_method.6', 'args': ['$40binary_add.11', '$max_values42.12'], 'res': '$44call_method.13'}), (46, {'item': '$44call_method.13', 'res': '$46load_method.14'}), (48, {'func': '$46load_method.14', 'args': [], 'res': '$48call_method.15'}), (50, {'res': '$gains50.16'}), (52, {'res': '$i52.17'}), (54, {'target': '$gains50.16', 'index': '$i52.17', 'value': '$48call_method.15'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$const58.0'}), (60, {'retval': '$const58.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    X = arg(0, name=X)                       ['X']
    gains = arg(1, name=gains)               ['gains']
    current_values = arg(2, name=current_values) ['current_values']
    max_values = arg(3, name=max_values)     ['max_values']
    idxs = arg(4, name=idxs)                 ['idxs']
    $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>) ['$2load_global.0']
    $6load_attr.2 = getattr(value=idxs, attr=shape) ['$6load_attr.2', 'idxs']
    $const8.3 = const(int, 0)                ['$const8.3']
    $10binary_subscr.4 = getitem(value=$6load_attr.2, index=$const8.3, fn=<built-in function getitem>) ['$10binary_subscr.4', '$6load_attr.2', '$const8.3']
    $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, saturatedCoverage.py:20)], kws=(), vararg=None, target=None) ['$10binary_subscr.4', '$12call_function.5', '$2load_global.0']
    $14get_iter.6 = getiter(value=$12call_function.5) ['$12call_function.5', '$14get_iter.6']
    $phi16.0 = $14get_iter.6                 ['$14get_iter.6', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 58             ['$16for_iter.3']
label 18:
    i = $phi18.1                             ['$phi18.1', 'i']
    idx = getitem(value=idxs, index=i, fn=<built-in function getitem>) ['i', 'idx', 'idxs']
    $28load_global.5 = global(numpy: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>) ['$28load_global.5']
    $30load_method.6 = getattr(value=$28load_global.5, attr=minimum) ['$28load_global.5', '$30load_method.6']
    $38binary_subscr.10 = getitem(value=X, index=idx, fn=<built-in function getitem>) ['$38binary_subscr.10', 'X', 'idx']
    $40binary_add.11 = current_values + $38binary_subscr.10 ['$38binary_subscr.10', '$40binary_add.11', 'current_values']
    $44call_method.13 = call $30load_method.6($40binary_add.11, max_values, func=$30load_method.6, args=[Var($40binary_add.11, saturatedCoverage.py:22), Var(max_values, saturatedCoverage.py:20)], kws=(), vararg=None, target=None) ['$30load_method.6', '$40binary_add.11', '$44call_method.13', 'max_values']
    $46load_method.14 = getattr(value=$44call_method.13, attr=sum) ['$44call_method.13', '$46load_method.14']
    $48call_method.15 = call $46load_method.14(func=$46load_method.14, args=[], kws=(), vararg=None, target=None) ['$46load_method.14', '$48call_method.15']
    gains[i] = $48call_method.15             ['$48call_method.15', 'gains', 'i']
    jump 16                                  []
label 58:
    $const58.0 = const(NoneType, None)       ['$const58.0']
    $60return_value.1 = cast(value=$const58.0) ['$60return_value.1', '$const58.0']
    return $60return_value.1                 ['$60return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618ae220>
DEBUG:numba.core.ssa:on stmt: X = arg(0, name=X)
DEBUG:numba.core.ssa:on stmt: gains = arg(1, name=gains)
DEBUG:numba.core.ssa:on stmt: current_values = arg(2, name=current_values)
DEBUG:numba.core.ssa:on stmt: max_values = arg(3, name=max_values)
DEBUG:numba.core.ssa:on stmt: idxs = arg(4, name=idxs)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=idxs, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const8.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = static_getitem(value=$6load_attr.2, index=0, index_var=$const8.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, saturatedCoverage.py:20)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.6 = getiter(value=$12call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618ae220>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618ae220>
DEBUG:numba.core.ssa:on stmt: i = $phi18.1
DEBUG:numba.core.ssa:on stmt: idx = getitem(value=idxs, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.5 = global(numpy: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.6 = getattr(value=$28load_global.5, attr=minimum)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.10 = getitem(value=X, index=idx, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_add.11 = current_values + $38binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $44call_method.13 = call $30load_method.6($40binary_add.11, max_values, func=$30load_method.6, args=[Var($40binary_add.11, saturatedCoverage.py:22), Var(max_values, saturatedCoverage.py:20)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $46load_method.14 = getattr(value=$44call_method.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: $48call_method.15 = call $46load_method.14(func=$46load_method.14, args=[], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: gains[i] = $48call_method.15
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618ae220>
DEBUG:numba.core.ssa:on stmt: $const58.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$const58.0)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7fa661901730>],
             '$12call_function.5': [<numba.core.ir.Assign object at 0x7fa66188f460>],
             '$14get_iter.6': [<numba.core.ir.Assign object at 0x7fa66188f5b0>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x7fa66188f910>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x7fa66188fa30>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x7fa66188fb50>],
             '$28load_global.5': [<numba.core.ir.Assign object at 0x7fa66189b490>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fa661890cd0>],
             '$30load_method.6': [<numba.core.ir.Assign object at 0x7fa66189b610>],
             '$38binary_subscr.10': [<numba.core.ir.Assign object at 0x7fa66189baf0>],
             '$40binary_add.11': [<numba.core.ir.Assign object at 0x7fa66189bc70>],
             '$44call_method.13': [<numba.core.ir.Assign object at 0x7fa66189bf40>],
             '$46load_method.14': [<numba.core.ir.Assign object at 0x7fa66189d0d0>],
             '$48call_method.15': [<numba.core.ir.Assign object at 0x7fa66189d280>],
             '$60return_value.1': [<numba.core.ir.Assign object at 0x7fa66189d670>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7fa661890f70>],
             '$const58.0': [<numba.core.ir.Assign object at 0x7fa66188fd30>],
             '$const8.3': [<numba.core.ir.Assign object at 0x7fa66188f130>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x7fa661890280>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x7fa66188f820>],
             'X': [<numba.core.ir.Assign object at 0x7fa6618902e0>],
             'current_values': [<numba.core.ir.Assign object at 0x7fa661890910>],
             'gains': [<numba.core.ir.Assign object at 0x7fa6618907f0>],
             'i': [<numba.core.ir.Assign object at 0x7fa66188fdf0>],
             'idx': [<numba.core.ir.Assign object at 0x7fa66189b1f0>],
             'idxs': [<numba.core.ir.Assign object at 0x7fa661890b50>],
             'max_values': [<numba.core.ir.Assign object at 0x7fa661890a30>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=254)
           2	LOAD_GLOBAL(arg=0, lineno=254)
           4	LOAD_ATTR(arg=1, lineno=254)
           6	LOAD_ATTR(arg=2, lineno=254)
           8	LOAD_METHOD(arg=3, lineno=254)
          10	CALL_METHOD(arg=0, lineno=254)
          12	POP_TOP(arg=None, lineno=254)
          14	LOAD_DEREF(arg=0, lineno=255)
          16	STORE_FAST(arg=1, lineno=255)
          18	LOAD_GLOBAL(arg=0, lineno=256)
          20	LOAD_ATTR(arg=1, lineno=256)
          22	LOAD_ATTR(arg=2, lineno=256)
          24	LOAD_METHOD(arg=4, lineno=256)
          26	LOAD_GLOBAL(arg=5, lineno=256)
          28	LOAD_FAST(arg=0, lineno=256)
          30	CALL_FUNCTION(arg=1, lineno=256)
          32	CALL_METHOD(arg=1, lineno=256)
          34	GET_ITER(arg=None, lineno=256)
>         36	FOR_ITER(arg=16, lineno=256)
          38	STORE_FAST(arg=2, lineno=256)
          40	LOAD_FAST(arg=1, lineno=257)
          42	LOAD_FAST(arg=0, lineno=257)
          44	LOAD_FAST(arg=2, lineno=257)
          46	BINARY_SUBSCR(arg=None, lineno=257)
          48	INPLACE_ADD(arg=None, lineno=257)
          50	STORE_FAST(arg=1, lineno=257)
          52	JUMP_ABSOLUTE(arg=36, lineno=257)
>         54	LOAD_FAST(arg=1, lineno=258)
          56	RETURN_VALUE(arg=None, lineno=258)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=254)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=254)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=254)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=2, lineno=254)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=3, lineno=254)
DEBUG:numba.core.byteflow:stack ['$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=0, lineno=254)
DEBUG:numba.core.byteflow:stack ['$8load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=POP_TOP(arg=None, lineno=254)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_DEREF(arg=0, lineno=255)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=255)
DEBUG:numba.core.byteflow:stack ['$14load_deref.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=256)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=256)
DEBUG:numba.core.byteflow:stack ['$18load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=256)
DEBUG:numba.core.byteflow:stack ['$20load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_METHOD(arg=4, lineno=256)
DEBUG:numba.core.byteflow:stack ['$22load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=256)
DEBUG:numba.core.byteflow:stack ['$24load_method.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=256)
DEBUG:numba.core.byteflow:stack ['$24load_method.9', '$26load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=256)
DEBUG:numba.core.byteflow:stack ['$24load_method.9', '$26load_global.10', '$in_arr28.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_METHOD(arg=1, lineno=256)
DEBUG:numba.core.byteflow:stack ['$24load_method.9', '$30call_function.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=GET_ITER(arg=None, lineno=256)
DEBUG:numba.core.byteflow:stack ['$32call_method.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=('$34get_iter.14',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi36.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=FOR_ITER(arg=16, lineno=256)
DEBUG:numba.core.byteflow:stack ['$phi36.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=258)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=258)
DEBUG:numba.core.byteflow:stack ['$val54.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=38 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi38.0', '$phi38.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=2, lineno=256)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$phi38.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=257)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=257)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$val40.2']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=257)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$val40.2', '$in_arr42.3']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=257)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$val40.2', '$in_arr42.3', '$i44.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=INPLACE_ADD(arg=None, lineno=257)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$val40.2', '$46binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_FAST(arg=1, lineno=257)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$48inplace_add.6']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=JUMP_ABSOLUTE(arg=36, lineno=257)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=('$phi38.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=54 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi36.0': {('$34get_iter.14', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.14'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'item': '$4load_attr.1', 'res': '$6load_attr.2'}), (8, {'item': '$6load_attr.2', 'res': '$8load_method.3'}), (10, {'func': '$8load_method.3', 'args': [], 'res': '$10call_method.4'}), (14, {'res': '$14load_deref.5'}), (16, {'value': '$14load_deref.5'}), (18, {'res': '$18load_global.6'}), (20, {'item': '$18load_global.6', 'res': '$20load_attr.7'}), (22, {'item': '$20load_attr.7', 'res': '$22load_attr.8'}), (24, {'item': '$22load_attr.8', 'res': '$24load_method.9'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$in_arr28.11'}), (30, {'func': '$26load_global.10', 'args': ['$in_arr28.11'], 'res': '$30call_function.12'}), (32, {'func': '$24load_method.9', 'args': ['$30call_function.12'], 'res': '$32call_method.13'}), (34, {'value': '$32call_method.13', 'res': '$34get_iter.14'})), outgoing_phis={'$phi36.0': '$34get_iter.14'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.14',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 38: ('$phi36.0', '$36for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$val40.2'}), (42, {'res': '$in_arr42.3'}), (44, {'res': '$i44.4'}), (46, {'index': '$i44.4', 'target': '$in_arr42.3', 'res': '$46binary_subscr.5'}), (48, {'lhs': '$val40.2', 'rhs': '$46binary_subscr.5', 'res': '$48inplace_add.6'}), (50, {'value': '$48inplace_add.6'}), (52, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi38.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$val54.0'}), (56, {'retval': '$val54.0', 'castval': '$56return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    in_arr = arg(0, name=in_arr)             ['in_arr']
    $2load_global.0 = global(numba: <module 'numba' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numba/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=parfors) ['$2load_global.0', '$4load_attr.1']
    $6load_attr.2 = getattr(value=$4load_attr.1, attr=parfor) ['$4load_attr.1', '$6load_attr.2']
    $8load_method.3 = getattr(value=$6load_attr.2, attr=init_prange) ['$6load_attr.2', '$8load_method.3']
    $10call_method.4 = call $8load_method.3(func=$8load_method.3, args=[], kws=(), vararg=None, target=None) ['$10call_method.4', '$8load_method.3']
    val = freevar(zero: 0.0)                 ['val']
    $18load_global.6 = global(numba: <module 'numba' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numba/__init__.py'>) ['$18load_global.6']
    $20load_attr.7 = getattr(value=$18load_global.6, attr=parfors) ['$18load_global.6', '$20load_attr.7']
    $22load_attr.8 = getattr(value=$20load_attr.7, attr=parfor) ['$20load_attr.7', '$22load_attr.8']
    $24load_method.9 = getattr(value=$22load_attr.8, attr=internal_prange) ['$22load_attr.8', '$24load_method.9']
    $26load_global.10 = global(len: <built-in function len>) ['$26load_global.10']
    $30call_function.12 = call $26load_global.10(in_arr, func=$26load_global.10, args=[Var(in_arr, parfor.py:254)], kws=(), vararg=None, target=None) ['$26load_global.10', '$30call_function.12', 'in_arr']
    $32call_method.13 = call $24load_method.9($30call_function.12, func=$24load_method.9, args=[Var($30call_function.12, parfor.py:256)], kws=(), vararg=None, target=None) ['$24load_method.9', '$30call_function.12', '$32call_method.13']
    $34get_iter.14 = getiter(value=$32call_method.13) ['$32call_method.13', '$34get_iter.14']
    $phi36.0 = $34get_iter.14                ['$34get_iter.14', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 54             ['$36for_iter.3']
label 38:
    i = $phi38.1                             ['$phi38.1', 'i']
    $46binary_subscr.5 = getitem(value=in_arr, index=i, fn=<built-in function getitem>) ['$46binary_subscr.5', 'i', 'in_arr']
    $48inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=val, rhs=$46binary_subscr.5, static_lhs=Undefined, static_rhs=Undefined) ['$46binary_subscr.5', '$48inplace_add.6', 'val']
    val = $48inplace_add.6                   ['$48inplace_add.6', 'val']
    jump 36                                  []
label 54:
    $56return_value.1 = cast(value=val)      ['$56return_value.1', 'val']
    return $56return_value.1                 ['$56return_value.1']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=116)
           2	LOAD_CONST(arg=0, lineno=116)
           4	RETURN_VALUE(arg=None, lineno=116)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=116)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=0, lineno=116)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RETURN_VALUE(arg=None, lineno=116)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'retval': '$const2.0', 'castval': '$4return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    $const2.0 = const(NoneType, None)        ['$const2.0']
    $4return_value.1 = cast(value=$const2.0) ['$4return_value.1', '$const2.0']
    return $4return_value.1                  ['$4return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661860b80>
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $4return_value.1 = cast(value=$const2.0)
DEBUG:numba.core.ssa:on stmt: return $4return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4return_value.1': [<numba.core.ir.Assign object at 0x7fa661865640>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7fa6618651c0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	CALL_FUNCTION(arg=2, lineno=3)
          10	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$tmp04.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$tmp04.1', '$tmp16.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$tmp04.1'}), (6, {'res': '$tmp16.2'}), (8, {'func': '$2load_global.0', 'args': ['$tmp04.1', '$tmp16.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    tmp0 = arg(0, name=tmp0)                 ['tmp0']
    tmp1 = arg(1, name=tmp1)                 ['tmp1']
    $2load_global.0 = global(intrin: <intrinsic stub>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(tmp0, tmp1, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(tmp1, <string>:3)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'tmp0', 'tmp1']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa66185a3a0>
DEBUG:numba.core.ssa:on stmt: tmp0 = arg(0, name=tmp0)
DEBUG:numba.core.ssa:on stmt: tmp1 = arg(1, name=tmp1)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(intrin: <intrinsic stub>)
DEBUG:numba.core.ssa:on stmt: $8call_function.3 = call $2load_global.0(tmp0, tmp1, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(tmp1, <string>:3)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10return_value.4 = cast(value=$8call_function.3)
DEBUG:numba.core.ssa:on stmt: return $10return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x7fa661853190>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fa661853dc0>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x7fa661853880>],
             'tmp0': [<numba.core.ir.Assign object at 0x7fa6618609a0>],
             'tmp1': [<numba.core.ir.Assign object at 0x7fa661860a90>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=8, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=9, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=9, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    X = arg(1, name=X)                       ['X']
    current__values = arg(2, name=current__values) ['current__values']
    current__values__size0_7 = arg(3, name=current__values__size0_7) ['current__values__size0_7']
    idxs = arg(4, name=idxs)                 ['idxs']
    max__values = arg(5, name=max__values)   ['max__values']
    max__values__size0_9 = arg(6, name=max__values__size0_9) ['max__values__size0_9']
    gains = arg(7, name=gains)               ['gains']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_31 = $phi32.1              ['$phi32.1', 'parfor__index_31']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618e24f0>
DEBUG:numba.core.ssa:on stmt: sched.75 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: X = arg(1, name=X)
DEBUG:numba.core.ssa:on stmt: current__values = arg(2, name=current__values)
DEBUG:numba.core.ssa:on stmt: current__values__size0_7 = arg(3, name=current__values__size0_7)
DEBUG:numba.core.ssa:on stmt: idxs = arg(4, name=idxs)
DEBUG:numba.core.ssa:on stmt: max__values = arg(5, name=max__values)
DEBUG:numba.core.ssa:on stmt: max__values__size0_9 = arg(6, name=max__values__size0_9)
DEBUG:numba.core.ssa:on stmt: gains = arg(7, name=gains)
DEBUG:numba.core.ssa:on stmt: $2load_global.0.76 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const6.2.77 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3.78 = getitem(value=sched.75, index=$const6.2.77, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const12.5.79 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.6.80 = getitem(value=sched.75, index=$const12.5.79, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.7.81 = global(np: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_method.8.82 = getattr(value=$16load_global.7.81, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const20.9.83 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $22call_method.10.84 = call $18load_method.8.82($const20.9.83, func=$18load_method.8.82, args=[Var($const20.9.83, <string>:2)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $24binary_add.11.85 = $14binary_subscr.6.80 + $22call_method.10.84
DEBUG:numba.core.ssa:on stmt: $26call_function.12.86 = call $2load_global.0.76($8binary_subscr.3.78, $24binary_add.11.85, func=$2load_global.0.76, args=[Var($8binary_subscr.3.78, <string>:2), Var($24binary_add.11.85, <string>:2)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28get_iter.13.87 = getiter(value=$26call_function.12.86)
DEBUG:numba.core.ssa:on stmt: $phi30.0.88 = $28get_iter.13.87
DEBUG:numba.core.ssa:on stmt: msg.15 = const(str, Sizes of current_values, $38binary_subscr.10, max_values do not match on /opt/conda/envs/py38/lib/python3.8/site-packages/apricot/functions/saturatedCoverage.py (22))
DEBUG:numba.core.ssa:on stmt: assert.16 = global(assert_equiv: <intrinsic assert_equiv>)
DEBUG:numba.core.ssa:on stmt: $np_g_var.20 = global(np: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $empty_attr_attr.21 = getattr(value=$np_g_var.20, attr=empty)
DEBUG:numba.core.ssa:on stmt: $np_typ_var.22 = getattr(value=$np_g_var.20, attr=float64)
DEBUG:numba.core.ssa:on stmt: $sum_parallel_impl__locals__sum_1_v7_in_arr.38 = call $empty_attr_attr.21(current__values__size0_7, $np_typ_var.22, func=$empty_attr_attr.21, args=[Var(current__values__size0_7, saturatedCoverage.py:20), Var($np_typ_var.22, saturatedCoverage.py:22)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618e24f0>
DEBUG:numba.core.ssa:on stmt: $30for_iter.1.89 = iternext(value=$phi30.0.88)
DEBUG:numba.core.ssa:on stmt: $30for_iter.2.90 = pair_first(value=$30for_iter.1.89)
DEBUG:numba.core.ssa:on stmt: $30for_iter.3.91 = pair_second(value=$30for_iter.1.89)
DEBUG:numba.core.ssa:on stmt: $phi32.1.92 = $30for_iter.2.90
DEBUG:numba.core.ssa:on stmt: branch $30for_iter.3.91, 32, 157
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618e24f0>
DEBUG:numba.core.ssa:on stmt: parfor__index_31 = $phi32.1.92
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 157
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618e24f0>
DEBUG:numba.core.ssa:on stmt: $const40.0.93 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $42return_value.1.94 = cast(value=$const40.0.93)
DEBUG:numba.core.ssa:on stmt: return $42return_value.1.94
DEBUG:numba.core.ssa:==== SSA block analysis pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618e24f0>
DEBUG:numba.core.ssa:on stmt: idx = getitem(value=idxs, index=parfor__index_31, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.5 = global(numpy: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.10 = getitem(value=X, index=idx, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.10_shape.13 = getattr(value=$38binary_subscr.10, attr=shape)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.10_size0.14 = static_getitem(value=$38binary_subscr.10_shape.13, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ret.17 = call assert.16(msg.15, current__values__size0_7, $38binary_subscr.10_size0.14, max__values__size0_9, func=assert.16, args=[Var(msg.15, saturatedCoverage.py:22), Var(current__values__size0_7, saturatedCoverage.py:20), Var($38binary_subscr.10_size0.14, saturatedCoverage.py:22), Var(max__values__size0_9, saturatedCoverage.py:20)], kws={}, vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: id=0[LoopNest(index_variable = parfor_index.19, range = (0, current__values__size0_7, 1))]{156: <ir.Block at /opt/conda/envs/py38/lib/python3.8/site-packages/apricot/functions/saturatedCoverage.py (22)>}Var(parfor_index.19, saturatedCoverage.py:22)
DEBUG:numba.core.ssa:on stmt: id=1[LoopNest(index_variable = parfor_index.29, range = (0, current__values__size0_7, 1))]{136: <ir.Block at /opt/conda/envs/py38/lib/python3.8/site-packages/numba/parfors/parfor.py (256)>}Var(parfor_index.29, parfor.py:256)
DEBUG:numba.core.ssa:on stmt: gains[parfor__index_31] = sum_parallel_impl__locals__sum_1_v7_val
DEBUG:numba.core.ssa:on stmt: jump 59
DEBUG:numba.core.ssa:==== SSA block analysis pass on 59
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6618e24f0>
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14binary_subscr.6.80': [<numba.core.ir.Assign object at 0x7fa66181d340>],
             '$16load_global.7.81': [<numba.core.ir.Assign object at 0x7fa66181d1f0>],
             '$18load_method.8.82': [<numba.core.ir.Assign object at 0x7fa66181d8e0>],
             '$22call_method.10.84': [<numba.core.ir.Assign object at 0x7fa66180e100>],
             '$24binary_add.11.85': [<numba.core.ir.Assign object at 0x7fa66180e160>],
             '$26call_function.12.86': [<numba.core.ir.Assign object at 0x7fa66180e370>],
             '$28get_iter.13.87': [<numba.core.ir.Assign object at 0x7fa66180e760>],
             '$28load_global.5': [<numba.core.ir.Assign object at 0x7fa66189b490>],
             '$2load_global.0.76': [<numba.core.ir.Assign object at 0x7fa66181dee0>],
             '$30for_iter.1.89': [<numba.core.ir.Assign object at 0x7fa66180e8e0>],
             '$30for_iter.2.90': [<numba.core.ir.Assign object at 0x7fa66180eb80>],
             '$30for_iter.3.91': [<numba.core.ir.Assign object at 0x7fa66180eca0>],
             '$38binary_subscr.10': [<numba.core.ir.Assign object at 0x7fa66189baf0>],
             '$38binary_subscr.10_shape.13': [<numba.core.ir.Assign object at 0x7fa661865400>],
             '$38binary_subscr.10_size0.14': [<numba.core.ir.Assign object at 0x7fa6618654f0>],
             '$42return_value.1.94': [<numba.core.ir.Assign object at 0x7fa6618d96a0>],
             '$8binary_subscr.3.78': [<numba.core.ir.Assign object at 0x7fa66181da30>],
             '$const12.5.79': [<numba.core.ir.Assign object at 0x7fa66181d610>],
             '$const20.9.83': [<numba.core.ir.Assign object at 0x7fa66181d4c0>],
             '$const40.0.93': [<numba.core.ir.Assign object at 0x7fa66192d100>],
             '$const6.2.77': [<numba.core.ir.Assign object at 0x7fa66181dd30>],
             '$empty_attr_attr.21': [<numba.core.ir.Assign object at 0x7fa661865fd0>],
             '$np_g_var.20': [<numba.core.ir.Assign object at 0x7fa661865e50>],
             '$np_typ_var.22': [<numba.core.ir.Assign object at 0x7fa661865820>],
             '$phi30.0.88': [<numba.core.ir.Assign object at 0x7fa66181d790>],
             '$phi32.1.92': [<numba.core.ir.Assign object at 0x7fa66180e970>],
             '$sum_parallel_impl__locals__sum_1_v7_in_arr.38': [<numba.core.ir.Assign object at 0x7fa661865c10>],
             'X': [<numba.core.ir.Assign object at 0x7fa66182a3d0>],
             'assert.16': [<numba.core.ir.Assign object at 0x7fa66186daf0>],
             'current__values': [<numba.core.ir.Assign object at 0x7fa66182a340>],
             'current__values__size0_7': [<numba.core.ir.Assign object at 0x7fa66182a190>],
             'gains': [<numba.core.ir.Assign object at 0x7fa66182abe0>],
             'idx': [<numba.core.ir.Assign object at 0x7fa66189b1f0>],
             'idxs': [<numba.core.ir.Assign object at 0x7fa66182aee0>],
             'max__values': [<numba.core.ir.Assign object at 0x7fa66182ae50>],
             'max__values__size0_9': [<numba.core.ir.Assign object at 0x7fa66182aaf0>],
             'msg.15': [<numba.core.ir.Assign object at 0x7fa66186db80>],
             'parfor__index_31': [<numba.core.ir.Assign object at 0x7fa66180ef70>],
             'ret.17': [<numba.core.ir.Assign object at 0x7fa66186db50>],
             'sched.75': [<numba.core.ir.Assign object at 0x7fa66182a4f0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	CALL_FUNCTION(arg=2, lineno=3)
          10	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$tmp04.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$tmp04.1', '$tmp16.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$tmp04.1'}), (6, {'res': '$tmp16.2'}), (8, {'func': '$2load_global.0', 'args': ['$tmp04.1', '$tmp16.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    tmp0 = arg(0, name=tmp0)                 ['tmp0']
    tmp1 = arg(1, name=tmp1)                 ['tmp1']
    $2load_global.0 = global(intrin: <intrinsic stub>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(tmp0, tmp1, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(tmp1, <string>:3)], kws=(), vararg=None, target=None) ['$2load_global.0', '$8call_function.3', 'tmp0', 'tmp1']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa66186ddf0>
DEBUG:numba.core.ssa:on stmt: tmp0 = arg(0, name=tmp0)
DEBUG:numba.core.ssa:on stmt: tmp1 = arg(1, name=tmp1)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(intrin: <intrinsic stub>)
DEBUG:numba.core.ssa:on stmt: $8call_function.3 = call $2load_global.0(tmp0, tmp1, func=$2load_global.0, args=[Var(tmp0, <string>:3), Var(tmp1, <string>:3)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10return_value.4 = cast(value=$8call_function.3)
DEBUG:numba.core.ssa:on stmt: return $10return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x7fa6618232e0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fa6617f1d60>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x7fa661823190>],
             'tmp0': [<numba.core.ir.Assign object at 0x7fa6617f1700>],
             'tmp1': [<numba.core.ir.Assign object at 0x7fa6617f1610>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3664)
           2	LOAD_FAST(arg=0, lineno=3664)
           4	LOAD_METHOD(arg=0, lineno=3664)
           6	LOAD_FAST(arg=1, lineno=3664)
           8	LOAD_FAST(arg=2, lineno=3664)
          10	CALL_METHOD(arg=2, lineno=3664)
          12	RETURN_VALUE(arg=None, lineno=3664)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3664)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3664)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$arrtype2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$size6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$size6.2', '$align8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=3664)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:3664), Var(align, arrayobj.py:3664)], kws=(), vararg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6617f91f0>
DEBUG:numba.core.ssa:on stmt: arrtype = arg(0, name=arrtype)
DEBUG:numba.core.ssa:on stmt: size = arg(1, name=size)
DEBUG:numba.core.ssa:on stmt: align = arg(2, name=align)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:3664), Var(align, arrayobj.py:3664)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_method.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x7fa6617d17c0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7fa6617d1910>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fa6617d13d0>],
             'align': [<numba.core.ir.Assign object at 0x7fa6617d1130>],
             'arrtype': [<numba.core.ir.Assign object at 0x7fa661822cd0>],
             'size': [<numba.core.ir.Assign object at 0x7fa661823b80>]})
DEBUG:numba.core.ssa:SSA violators set()
OMP: Info #276: omp_set_nested routine deprecated, please use omp_set_max_active_levels instead.
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=26)
           2	LOAD_GLOBAL(arg=0, lineno=26)
           4	LOAD_FAST(arg=6, lineno=26)
           6	LOAD_ATTR(arg=1, lineno=26)
           8	LOAD_CONST(arg=1, lineno=26)
          10	BINARY_SUBSCR(arg=None, lineno=26)
          12	CALL_FUNCTION(arg=1, lineno=26)
          14	GET_ITER(arg=None, lineno=26)
>         16	FOR_ITER(arg=102, lineno=26)
          18	STORE_FAST(arg=7, lineno=26)
          20	LOAD_FAST(arg=6, lineno=27)
          22	LOAD_FAST(arg=7, lineno=27)
          24	BINARY_SUBSCR(arg=None, lineno=27)
          26	STORE_FAST(arg=8, lineno=27)
          28	LOAD_FAST(arg=2, lineno=29)
          30	LOAD_FAST(arg=8, lineno=29)
          32	BINARY_SUBSCR(arg=None, lineno=29)
          34	STORE_FAST(arg=9, lineno=29)
          36	LOAD_FAST(arg=2, lineno=30)
          38	LOAD_FAST(arg=8, lineno=30)
          40	LOAD_CONST(arg=2, lineno=30)
          42	BINARY_ADD(arg=None, lineno=30)
          44	BINARY_SUBSCR(arg=None, lineno=30)
          46	STORE_FAST(arg=10, lineno=30)
          48	LOAD_GLOBAL(arg=2, lineno=32)
          50	LOAD_FAST(arg=9, lineno=32)
          52	LOAD_FAST(arg=10, lineno=32)
          54	CALL_FUNCTION(arg=2, lineno=32)
          56	GET_ITER(arg=None, lineno=32)
>         58	FOR_ITER(arg=58, lineno=32)
          60	STORE_FAST(arg=11, lineno=32)
          62	LOAD_FAST(arg=1, lineno=33)
          64	LOAD_FAST(arg=11, lineno=33)
          66	BINARY_SUBSCR(arg=None, lineno=33)
          68	STORE_FAST(arg=12, lineno=33)
          70	LOAD_FAST(arg=3, lineno=34)
          72	LOAD_FAST(arg=7, lineno=34)
          74	DUP_TOP_TWO(arg=None, lineno=34)
          76	BINARY_SUBSCR(arg=None, lineno=34)
          78	LOAD_GLOBAL(arg=3, lineno=34)
          80	LOAD_FAST(arg=0, lineno=34)
          82	LOAD_FAST(arg=11, lineno=34)
          84	BINARY_SUBSCR(arg=None, lineno=34)
          86	LOAD_FAST(arg=4, lineno=34)
          88	LOAD_FAST(arg=12, lineno=34)
          90	BINARY_SUBSCR(arg=None, lineno=34)
          92	BINARY_ADD(arg=None, lineno=34)
          94	LOAD_FAST(arg=5, lineno=34)
          96	LOAD_FAST(arg=12, lineno=34)
          98	BINARY_SUBSCR(arg=None, lineno=34)
         100	CALL_FUNCTION(arg=2, lineno=34)
         102	LOAD_FAST(arg=4, lineno=34)
         104	LOAD_FAST(arg=12, lineno=34)
         106	BINARY_SUBSCR(arg=None, lineno=34)
         108	BINARY_SUBTRACT(arg=None, lineno=34)
         110	INPLACE_ADD(arg=None, lineno=34)
         112	ROT_THREE(arg=None, lineno=34)
         114	STORE_SUBSCR(arg=None, lineno=34)
         116	JUMP_ABSOLUTE(arg=58, lineno=34)
>        118	JUMP_ABSOLUTE(arg=16, lineno=34)
>        120	LOAD_CONST(arg=0, lineno=34)
         122	RETURN_VALUE(arg=None, lineno=34)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=26)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=26)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=6, lineno=26)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=26)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$idxs4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=26)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=26)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$const8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=1, lineno=26)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$10binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=GET_ITER(arg=None, lineno=26)
DEBUG:numba.core.byteflow:stack ['$12call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$14get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi16.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=FOR_ITER(arg=102, lineno=26)
DEBUG:numba.core.byteflow:stack ['$phi16.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_CONST(arg=0, lineno=34)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=RETURN_VALUE(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$const120.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=26)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=6, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=7, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$idxs20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_SUBSCR(arg=None, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$idxs20.2', '$i22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=8, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$24binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=8, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$X_indptr28.5']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$X_indptr28.5', '$idx30.6']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$32binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$X_indptr36.8']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$X_indptr36.8', '$idx38.9']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$X_indptr36.8', '$idx38.9', '$const40.10']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$X_indptr36.8', '$42binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=10, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$44binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=2, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$48load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$48load_global.13', '$start50.14']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=CALL_FUNCTION(arg=2, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$48load_global.13', '$start50.14', '$end52.15']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=GET_ITER(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$54call_function.16']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=('$phi18.0', '$56get_iter.17'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi58.0', '$phi58.1']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=FOR_ITER(arg=58, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi58.0', '$phi58.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=118, stack=('$phi58.0',), blockstack=(), npush=0), Edge(pc=60, stack=('$phi58.0', '$phi58.1', '$58for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=1), State(pc_initial=60 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi118.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=JUMP_ABSOLUTE(arg=16, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi118.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi118.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=3), State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi60.0', '$phi60.1', '$phi60.2']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$phi60.2']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=11, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$X_indices62.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$X_indices62.3', '$j64.4']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=12, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$66binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=3, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=7, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=DUP_TOP_TWO(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$74dup_top_two.8', '$74dup_top_two.9']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_GLOBAL(arg=3, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$X_data80.12']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$X_data80.12', '$j82.13']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=4, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$84binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=12, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$84binary_subscr.14', '$current_values86.15']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$84binary_subscr.14', '$current_values86.15', '$k88.16']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=BINARY_ADD(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$84binary_subscr.14', '$90binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=5, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$92binary_add.18']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=12, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$92binary_add.18', '$max_values94.19']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$92binary_add.18', '$max_values94.19', '$k96.20']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=CALL_FUNCTION(arg=2, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$78load_global.11', '$92binary_add.18', '$98binary_subscr.21']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=4, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$100call_function.22']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=12, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$100call_function.22', '$current_values102.23']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=BINARY_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$100call_function.22', '$current_values102.23', '$k104.24']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=BINARY_SUBTRACT(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$100call_function.22', '$106binary_subscr.25']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=INPLACE_ADD(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$76binary_subscr.10', '$108binary_subtract.26']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=ROT_THREE(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$gains70.6', '$i72.7', '$110inplace_add.27']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=STORE_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1', '$110inplace_add.27', '$gains70.6', '$i72.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=JUMP_ABSOLUTE(arg=58, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi60.0', '$phi60.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=('$phi60.0', '$phi60.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1), State(pc_initial=58 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=58 nstack_initial=2): {'$phi58.1'},
             State(pc_initial=60 nstack_initial=3): {'$phi60.2'},
             State(pc_initial=118 nstack_initial=1): set(),
             State(pc_initial=120 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1),
 '$phi58.1': State(pc_initial=18 nstack_initial=2),
 '$phi60.2': State(pc_initial=58 nstack_initial=2)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi118.0': {('$phi58.0', State(pc_initial=58 nstack_initial=2))},
             '$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi118.0',
                           State(pc_initial=118 nstack_initial=1))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi58.0': {('$phi18.0', State(pc_initial=18 nstack_initial=2)),
                          ('$phi60.0', State(pc_initial=60 nstack_initial=3))},
             '$phi58.1': {('$56get_iter.17',
                           State(pc_initial=18 nstack_initial=2)),
                          ('$phi60.1', State(pc_initial=60 nstack_initial=3))},
             '$phi60.0': {('$phi58.0', State(pc_initial=58 nstack_initial=2))},
             '$phi60.1': {('$phi58.1', State(pc_initial=58 nstack_initial=2))},
             '$phi60.2': {('$58for_iter.3',
                           State(pc_initial=58 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi118.0': {('$phi18.0', State(pc_initial=18 nstack_initial=2)),
                           ('$phi60.0', State(pc_initial=60 nstack_initial=3))},
             '$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2)),
                          ('$phi60.0', State(pc_initial=60 nstack_initial=3))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2)),
                          ('$phi60.0', State(pc_initial=60 nstack_initial=3))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi58.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=2))},
             '$phi58.1': {('$56get_iter.17',
                           State(pc_initial=18 nstack_initial=2)),
                          ('$phi58.1', State(pc_initial=58 nstack_initial=2))},
             '$phi60.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi60.1': {('$56get_iter.17',
                           State(pc_initial=18 nstack_initial=2))},
             '$phi60.2': {('$58for_iter.3',
                           State(pc_initial=58 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi118.0': {('$14get_iter.6',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi58.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$56get_iter.17',
                           State(pc_initial=18 nstack_initial=2))},
             '$phi60.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi60.1': {('$56get_iter.17',
                           State(pc_initial=18 nstack_initial=2))},
             '$phi60.2': {('$58for_iter.3',
                           State(pc_initial=58 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi118.0': {('$14get_iter.6',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi58.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$56get_iter.17',
                           State(pc_initial=18 nstack_initial=2))},
             '$phi60.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi60.1': {('$56get_iter.17',
                           State(pc_initial=18 nstack_initial=2))},
             '$phi60.2': {('$58for_iter.3',
                           State(pc_initial=58 nstack_initial=2))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi16.0': {('$14get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))},
 '$phi58.1': {('$56get_iter.17', State(pc_initial=18 nstack_initial=2))},
 '$phi60.2': {('$58for_iter.3', State(pc_initial=58 nstack_initial=2))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.6'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'},
             State(pc_initial=18 nstack_initial=2): {'$phi58.1': '$56get_iter.17'},
             State(pc_initial=58 nstack_initial=2): {'$phi60.2': '$58for_iter.3'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$idxs4.1'}), (6, {'item': '$idxs4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'index': '$const8.3', 'target': '$6load_attr.2', 'res': '$10binary_subscr.4'}), (12, {'func': '$2load_global.0', 'args': ['$10binary_subscr.4'], 'res': '$12call_function.5'}), (14, {'value': '$12call_function.5', 'res': '$14get_iter.6'})), outgoing_phis={'$phi16.0': '$14get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: (), 18: ('$phi16.0', '$16for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$idxs20.2'}), (22, {'res': '$i22.3'}), (24, {'index': '$i22.3', 'target': '$idxs20.2', 'res': '$24binary_subscr.4'}), (26, {'value': '$24binary_subscr.4'}), (28, {'res': '$X_indptr28.5'}), (30, {'res': '$idx30.6'}), (32, {'index': '$idx30.6', 'target': '$X_indptr28.5', 'res': '$32binary_subscr.7'}), (34, {'value': '$32binary_subscr.7'}), (36, {'res': '$X_indptr36.8'}), (38, {'res': '$idx38.9'}), (40, {'res': '$const40.10'}), (42, {'lhs': '$idx38.9', 'rhs': '$const40.10', 'res': '$42binary_add.11'}), (44, {'index': '$42binary_add.11', 'target': '$X_indptr36.8', 'res': '$44binary_subscr.12'}), (46, {'value': '$44binary_subscr.12'}), (48, {'res': '$48load_global.13'}), (50, {'res': '$start50.14'}), (52, {'res': '$end52.15'}), (54, {'func': '$48load_global.13', 'args': ['$start50.14', '$end52.15'], 'res': '$54call_function.16'}), (56, {'value': '$54call_function.16', 'res': '$56get_iter.17'})), outgoing_phis={'$phi58.1': '$56get_iter.17'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$phi18.0', '$56get_iter.17')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=2):
AdaptBlockInfo(insts=((58, {'iterator': '$phi58.1', 'pair': '$58for_iter.2', 'indval': '$58for_iter.3', 'pred': '$58for_iter.4'}),), outgoing_phis={'$phi60.2': '$58for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ('$phi58.0',), 60: ('$phi58.0', '$phi58.1', '$58for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=3):
AdaptBlockInfo(insts=((60, {'value': '$phi60.2'}), (62, {'res': '$X_indices62.3'}), (64, {'res': '$j64.4'}), (66, {'index': '$j64.4', 'target': '$X_indices62.3', 'res': '$66binary_subscr.5'}), (68, {'value': '$66binary_subscr.5'}), (70, {'res': '$gains70.6'}), (72, {'res': '$i72.7'}), (74, {'orig': ['$gains70.6', '$i72.7'], 'duped': ['$74dup_top_two.8', '$74dup_top_two.9']}), (76, {'index': '$74dup_top_two.9', 'target': '$74dup_top_two.8', 'res': '$76binary_subscr.10'}), (78, {'res': '$78load_global.11'}), (80, {'res': '$X_data80.12'}), (82, {'res': '$j82.13'}), (84, {'index': '$j82.13', 'target': '$X_data80.12', 'res': '$84binary_subscr.14'}), (86, {'res': '$current_values86.15'}), (88, {'res': '$k88.16'}), (90, {'index': '$k88.16', 'target': '$current_values86.15', 'res': '$90binary_subscr.17'}), (92, {'lhs': '$84binary_subscr.14', 'rhs': '$90binary_subscr.17', 'res': '$92binary_add.18'}), (94, {'res': '$max_values94.19'}), (96, {'res': '$k96.20'}), (98, {'index': '$k96.20', 'target': '$max_values94.19', 'res': '$98binary_subscr.21'}), (100, {'func': '$78load_global.11', 'args': ['$92binary_add.18', '$98binary_subscr.21'], 'res': '$100call_function.22'}), (102, {'res': '$current_values102.23'}), (104, {'res': '$k104.24'}), (106, {'index': '$k104.24', 'target': '$current_values102.23', 'res': '$106binary_subscr.25'}), (108, {'lhs': '$100call_function.22', 'rhs': '$106binary_subscr.25', 'res': '$108binary_subtract.26'}), (110, {'lhs': '$76binary_subscr.10', 'rhs': '$108binary_subtract.26', 'res': '$110inplace_add.27'}), (114, {'target': '$gains70.6', 'index': '$i72.7', 'value': '$110inplace_add.27'}), (116, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$phi60.0', '$phi60.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=118 nstack_initial=1):
AdaptBlockInfo(insts=((118, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi118.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$const120.0'}), (122, {'retval': '$const120.0', 'castval': '$122return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    X_data = arg(0, name=X_data)             ['X_data']
    X_indices = arg(1, name=X_indices)       ['X_indices']
    X_indptr = arg(2, name=X_indptr)         ['X_indptr']
    gains = arg(3, name=gains)               ['gains']
    current_values = arg(4, name=current_values) ['current_values']
    max_values = arg(5, name=max_values)     ['max_values']
    idxs = arg(6, name=idxs)                 ['idxs']
    $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>) ['$2load_global.0']
    $6load_attr.2 = getattr(value=idxs, attr=shape) ['$6load_attr.2', 'idxs']
    $const8.3 = const(int, 0)                ['$const8.3']
    $10binary_subscr.4 = getitem(value=$6load_attr.2, index=$const8.3, fn=<built-in function getitem>) ['$10binary_subscr.4', '$6load_attr.2', '$const8.3']
    $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, saturatedCoverage.py:26)], kws=(), vararg=None, target=None) ['$10binary_subscr.4', '$12call_function.5', '$2load_global.0']
    $14get_iter.6 = getiter(value=$12call_function.5) ['$12call_function.5', '$14get_iter.6']
    $phi16.0 = $14get_iter.6                 ['$14get_iter.6', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 120            ['$16for_iter.3']
label 18:
    i = $phi18.1                             ['$phi18.1', 'i']
    idx = getitem(value=idxs, index=i, fn=<built-in function getitem>) ['i', 'idx', 'idxs']
    start = getitem(value=X_indptr, index=idx, fn=<built-in function getitem>) ['X_indptr', 'idx', 'start']
    $const40.10 = const(int, 1)              ['$const40.10']
    $42binary_add.11 = idx + $const40.10     ['$42binary_add.11', '$const40.10', 'idx']
    end = getitem(value=X_indptr, index=$42binary_add.11, fn=<built-in function getitem>) ['$42binary_add.11', 'X_indptr', 'end']
    $48load_global.13 = global(range: <class 'range'>) ['$48load_global.13']
    $54call_function.16 = call $48load_global.13(start, end, func=$48load_global.13, args=[Var(start, saturatedCoverage.py:29), Var(end, saturatedCoverage.py:30)], kws=(), vararg=None, target=None) ['$48load_global.13', '$54call_function.16', 'end', 'start']
    $56get_iter.17 = getiter(value=$54call_function.16) ['$54call_function.16', '$56get_iter.17']
    $phi58.1 = $56get_iter.17                ['$56get_iter.17', '$phi58.1']
    jump 58                                  []
label 58:
    $58for_iter.2 = iternext(value=$phi58.1) ['$58for_iter.2', '$phi58.1']
    $58for_iter.3 = pair_first(value=$58for_iter.2) ['$58for_iter.2', '$58for_iter.3']
    $58for_iter.4 = pair_second(value=$58for_iter.2) ['$58for_iter.2', '$58for_iter.4']
    $phi60.2 = $58for_iter.3                 ['$58for_iter.3', '$phi60.2']
    branch $58for_iter.4, 60, 118            ['$58for_iter.4']
label 60:
    j = $phi60.2                             ['$phi60.2', 'j']
    k = getitem(value=X_indices, index=j, fn=<built-in function getitem>) ['X_indices', 'j', 'k']
    $76binary_subscr.10 = getitem(value=gains, index=i, fn=<built-in function getitem>) ['$76binary_subscr.10', 'gains', 'i']
    $78load_global.11 = global(min: <built-in function min>) ['$78load_global.11']
    $84binary_subscr.14 = getitem(value=X_data, index=j, fn=<built-in function getitem>) ['$84binary_subscr.14', 'X_data', 'j']
    $90binary_subscr.17 = getitem(value=current_values, index=k, fn=<built-in function getitem>) ['$90binary_subscr.17', 'current_values', 'k']
    $92binary_add.18 = $84binary_subscr.14 + $90binary_subscr.17 ['$84binary_subscr.14', '$90binary_subscr.17', '$92binary_add.18']
    $98binary_subscr.21 = getitem(value=max_values, index=k, fn=<built-in function getitem>) ['$98binary_subscr.21', 'k', 'max_values']
    $100call_function.22 = call $78load_global.11($92binary_add.18, $98binary_subscr.21, func=$78load_global.11, args=[Var($92binary_add.18, saturatedCoverage.py:34), Var($98binary_subscr.21, saturatedCoverage.py:34)], kws=(), vararg=None, target=None) ['$100call_function.22', '$78load_global.11', '$92binary_add.18', '$98binary_subscr.21']
    $106binary_subscr.25 = getitem(value=current_values, index=k, fn=<built-in function getitem>) ['$106binary_subscr.25', 'current_values', 'k']
    $108binary_subtract.26 = $100call_function.22 - $106binary_subscr.25 ['$100call_function.22', '$106binary_subscr.25', '$108binary_subtract.26']
    $110inplace_add.27 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$76binary_subscr.10, rhs=$108binary_subtract.26, static_lhs=Undefined, static_rhs=Undefined) ['$108binary_subtract.26', '$110inplace_add.27', '$76binary_subscr.10']
    gains[i] = $110inplace_add.27            ['$110inplace_add.27', 'gains', 'i']
    jump 58                                  []
label 118:
    jump 16                                  []
label 120:
    $const120.0 = const(NoneType, None)      ['$const120.0']
    $122return_value.1 = cast(value=$const120.0) ['$122return_value.1', '$const120.0']
    return $122return_value.1                ['$122return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6615f9fa0>
DEBUG:numba.core.ssa:on stmt: X_data = arg(0, name=X_data)
DEBUG:numba.core.ssa:on stmt: X_indices = arg(1, name=X_indices)
DEBUG:numba.core.ssa:on stmt: X_indptr = arg(2, name=X_indptr)
DEBUG:numba.core.ssa:on stmt: gains = arg(3, name=gains)
DEBUG:numba.core.ssa:on stmt: current_values = arg(4, name=current_values)
DEBUG:numba.core.ssa:on stmt: max_values = arg(5, name=max_values)
DEBUG:numba.core.ssa:on stmt: idxs = arg(6, name=idxs)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=idxs, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const8.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = static_getitem(value=$6load_attr.2, index=0, index_var=$const8.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, saturatedCoverage.py:26)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.6 = getiter(value=$12call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6615f9fa0>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 120
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6615f9fa0>
DEBUG:numba.core.ssa:on stmt: i = $phi18.1
DEBUG:numba.core.ssa:on stmt: idx = getitem(value=idxs, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: start = getitem(value=X_indptr, index=idx, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const40.10 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $42binary_add.11 = idx + $const40.10
DEBUG:numba.core.ssa:on stmt: end = getitem(value=X_indptr, index=$42binary_add.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $54call_function.16 = call $48load_global.13(start, end, func=$48load_global.13, args=[Var(start, saturatedCoverage.py:29), Var(end, saturatedCoverage.py:30)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $56get_iter.17 = getiter(value=$54call_function.16)
DEBUG:numba.core.ssa:on stmt: $phi58.1 = $56get_iter.17
DEBUG:numba.core.ssa:on stmt: jump 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6615f9fa0>
DEBUG:numba.core.ssa:on stmt: $58for_iter.2 = iternext(value=$phi58.1)
DEBUG:numba.core.ssa:on stmt: $58for_iter.3 = pair_first(value=$58for_iter.2)
DEBUG:numba.core.ssa:on stmt: $58for_iter.4 = pair_second(value=$58for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi60.2 = $58for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $58for_iter.4, 60, 118
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6615f9fa0>
DEBUG:numba.core.ssa:on stmt: j = $phi60.2
DEBUG:numba.core.ssa:on stmt: k = getitem(value=X_indices, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76binary_subscr.10 = getitem(value=gains, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $78load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.14 = getitem(value=X_data, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_subscr.17 = getitem(value=current_values, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92binary_add.18 = $84binary_subscr.14 + $90binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.21 = getitem(value=max_values, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100call_function.22 = call $78load_global.11($92binary_add.18, $98binary_subscr.21, func=$78load_global.11, args=[Var($92binary_add.18, saturatedCoverage.py:34), Var($98binary_subscr.21, saturatedCoverage.py:34)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106binary_subscr.25 = getitem(value=current_values, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $108binary_subtract.26 = $100call_function.22 - $106binary_subscr.25
DEBUG:numba.core.ssa:on stmt: $110inplace_add.27 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$76binary_subscr.10, rhs=$108binary_subtract.26, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: gains[i] = $110inplace_add.27
DEBUG:numba.core.ssa:on stmt: jump 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6615f9fa0>
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa6615f9fa0>
DEBUG:numba.core.ssa:on stmt: $const120.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $122return_value.1 = cast(value=$const120.0)
DEBUG:numba.core.ssa:on stmt: return $122return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100call_function.22': [<numba.core.ir.Assign object at 0x7fa66159b580>],
             '$106binary_subscr.25': [<numba.core.ir.Assign object at 0x7fa66159b910>],
             '$108binary_subtract.26': [<numba.core.ir.Assign object at 0x7fa66159ba90>],
             '$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7fa6616a9f40>],
             '$110inplace_add.27': [<numba.core.ir.Assign object at 0x7fa66159bc10>],
             '$122return_value.1': [<numba.core.ir.Assign object at 0x7fa66159b670>],
             '$12call_function.5': [<numba.core.ir.Assign object at 0x7fa6615923a0>],
             '$14get_iter.6': [<numba.core.ir.Assign object at 0x7fa6615924f0>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x7fa661592850>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x7fa661592970>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x7fa661592a90>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fa6615841c0>],
             '$42binary_add.11': [<numba.core.ir.Assign object at 0x7fa661595c70>],
             '$48load_global.13': [<numba.core.ir.Assign object at 0x7fa6615970d0>],
             '$54call_function.16': [<numba.core.ir.Assign object at 0x7fa6615974c0>],
             '$56get_iter.17': [<numba.core.ir.Assign object at 0x7fa661597610>],
             '$58for_iter.2': [<numba.core.ir.Assign object at 0x7fa6615971f0>],
             '$58for_iter.3': [<numba.core.ir.Assign object at 0x7fa6615976d0>],
             '$58for_iter.4': [<numba.core.ir.Assign object at 0x7fa6615977f0>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7fa661584eb0>],
             '$76binary_subscr.10': [<numba.core.ir.Assign object at 0x7fa661599550>],
             '$78load_global.11': [<numba.core.ir.Assign object at 0x7fa6615996d0>],
             '$84binary_subscr.14': [<numba.core.ir.Assign object at 0x7fa661599a90>],
             '$90binary_subscr.17': [<numba.core.ir.Assign object at 0x7fa661599e50>],
             '$92binary_add.18': [<numba.core.ir.Assign object at 0x7fa661599fd0>],
             '$98binary_subscr.21': [<numba.core.ir.Assign object at 0x7fa66159b3d0>],
             '$const120.0': [<numba.core.ir.Assign object at 0x7fa661599be0>],
             '$const40.10': [<numba.core.ir.Assign object at 0x7fa661595af0>],
             '$const8.3': [<numba.core.ir.Assign object at 0x7fa661592070>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x7fa661584730>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x7fa661592760>],
             '$phi58.1': [<numba.core.ir.Assign object at 0x7fa661595370>],
             '$phi60.2': [<numba.core.ir.Assign object at 0x7fa661592e50>],
             'X_data': [<numba.core.ir.Assign object at 0x7fa661584c40>],
             'X_indices': [<numba.core.ir.Assign object at 0x7fa661584b20>],
             'X_indptr': [<numba.core.ir.Assign object at 0x7fa661584a00>],
             'current_values': [<numba.core.ir.Assign object at 0x7fa661584070>],
             'end': [<numba.core.ir.Assign object at 0x7fa661595df0>],
             'gains': [<numba.core.ir.Assign object at 0x7fa6615848e0>],
             'i': [<numba.core.ir.Assign object at 0x7fa661592d30>],
             'idx': [<numba.core.ir.Assign object at 0x7fa661595130>],
             'idxs': [<numba.core.ir.Assign object at 0x7fa661584310>],
             'j': [<numba.core.ir.Assign object at 0x7fa661597a90>],
             'k': [<numba.core.ir.Assign object at 0x7fa661597e50>],
             'max_values': [<numba.core.ir.Assign object at 0x7fa661584430>],
             'start': [<numba.core.ir.Assign object at 0x7fa661595610>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=8, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=9, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=9, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    X__data = arg(1, name=X__data)           ['X__data']
    X__indices = arg(2, name=X__indices)     ['X__indices']
    X__indptr = arg(3, name=X__indptr)       ['X__indptr']
    current__values = arg(4, name=current__values) ['current__values']
    idxs = arg(5, name=idxs)                 ['idxs']
    max__values = arg(6, name=max__values)   ['max__values']
    gains = arg(7, name=gains)               ['gains']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_182 = $phi32.1             ['$phi32.1', 'parfor__index_182']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: sched.198 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: X__data = arg(1, name=X__data)
DEBUG:numba.core.ssa:on stmt: X__indices = arg(2, name=X__indices)
DEBUG:numba.core.ssa:on stmt: X__indptr = arg(3, name=X__indptr)
DEBUG:numba.core.ssa:on stmt: current__values = arg(4, name=current__values)
DEBUG:numba.core.ssa:on stmt: idxs = arg(5, name=idxs)
DEBUG:numba.core.ssa:on stmt: max__values = arg(6, name=max__values)
DEBUG:numba.core.ssa:on stmt: gains = arg(7, name=gains)
DEBUG:numba.core.ssa:on stmt: $2load_global.0.199 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const6.2.200 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3.201 = getitem(value=sched.198, index=$const6.2.200, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const12.5.202 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.6.203 = getitem(value=sched.198, index=$const12.5.202, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.7.204 = global(np: <module 'numpy' from '/opt/conda/envs/py38/lib/python3.8/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_method.8.205 = getattr(value=$16load_global.7.204, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const20.9.206 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $22call_method.10.207 = call $18load_method.8.205($const20.9.206, func=$18load_method.8.205, args=[Var($const20.9.206, <string>:2)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $24binary_add.11.208 = $14binary_subscr.6.203 + $22call_method.10.207
DEBUG:numba.core.ssa:on stmt: $26call_function.12.209 = call $2load_global.0.199($8binary_subscr.3.201, $24binary_add.11.208, func=$2load_global.0.199, args=[Var($8binary_subscr.3.201, <string>:2), Var($24binary_add.11.208, <string>:2)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28get_iter.13.210 = getiter(value=$26call_function.12.209)
DEBUG:numba.core.ssa:on stmt: $phi30.0.211 = $28get_iter.13.210
DEBUG:numba.core.ssa:on stmt: $const40.10 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $48load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $78load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: $30for_iter.1.212 = iternext(value=$phi30.0.211)
DEBUG:numba.core.ssa:on stmt: $30for_iter.2.213 = pair_first(value=$30for_iter.1.212)
DEBUG:numba.core.ssa:on stmt: $30for_iter.3.214 = pair_second(value=$30for_iter.1.212)
DEBUG:numba.core.ssa:on stmt: $phi32.1.215 = $30for_iter.2.213
DEBUG:numba.core.ssa:on stmt: branch $30for_iter.3.214, 32, 160
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: parfor__index_182 = $phi32.1.215
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: $const40.0.216 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $42return_value.1.217 = cast(value=$const40.0.216)
DEBUG:numba.core.ssa:on stmt: return $42return_value.1.217
DEBUG:numba.core.ssa:==== SSA block analysis pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: idx = getitem(value=idxs, index=parfor__index_182, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: start = getitem(value=X__indptr, index=idx, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_add.11 = idx + $const40.10
DEBUG:numba.core.ssa:on stmt: end = getitem(value=X__indptr, index=$42binary_add.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54call_function.16 = call $48load_global.13(start, end, func=$48load_global.13, args=[Var(start, saturatedCoverage.py:29), Var(end, saturatedCoverage.py:30)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $56get_iter.17 = getiter(value=$54call_function.16)
DEBUG:numba.core.ssa:on stmt: jump 59
DEBUG:numba.core.ssa:==== SSA block analysis pass on 101
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: jump 159
DEBUG:numba.core.ssa:==== SSA block analysis pass on 59
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: $58for_iter.2 = iternext(value=$56get_iter.17)
DEBUG:numba.core.ssa:on stmt: $j.185 = pair_first(value=$58for_iter.2)
DEBUG:numba.core.ssa:on stmt: $58for_iter.4 = pair_second(value=$58for_iter.2)
DEBUG:numba.core.ssa:on stmt: branch $58for_iter.4, 99, 101
DEBUG:numba.core.ssa:==== SSA block analysis pass on 99
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: k = getitem(value=X__indices, index=$j.185, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76binary_subscr.10 = getitem(value=gains, index=parfor__index_182, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.14 = getitem(value=X__data, index=$j.185, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_subscr.17 = getitem(value=current__values, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92binary_add.18 = $84binary_subscr.14 + $90binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.21 = getitem(value=max__values, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100call_function.22 = call $78load_global.11($92binary_add.18, $98binary_subscr.21, func=$78load_global.11, args=[Var($92binary_add.18, saturatedCoverage.py:34), Var($98binary_subscr.21, saturatedCoverage.py:34)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106binary_subscr.25 = getitem(value=current__values, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $108binary_subtract.26 = $100call_function.22 - $106binary_subscr.25
DEBUG:numba.core.ssa:on stmt: $110inplace_add.27 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$76binary_subscr.10, rhs=$108binary_subtract.26, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: gains[parfor__index_182] = $110inplace_add.27
DEBUG:numba.core.ssa:on stmt: jump 59
DEBUG:numba.core.ssa:==== SSA block analysis pass on 159
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fa661665940>
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100call_function.22': [<numba.core.ir.Assign object at 0x7fa66159b580>],
             '$106binary_subscr.25': [<numba.core.ir.Assign object at 0x7fa66159b910>],
             '$108binary_subtract.26': [<numba.core.ir.Assign object at 0x7fa66159ba90>],
             '$110inplace_add.27': [<numba.core.ir.Assign object at 0x7fa66159bc10>],
             '$14binary_subscr.6.203': [<numba.core.ir.Assign object at 0x7fa6615aeca0>],
             '$16load_global.7.204': [<numba.core.ir.Assign object at 0x7fa6615aee20>],
             '$18load_method.8.205': [<numba.core.ir.Assign object at 0x7fa6615aefa0>],
             '$22call_method.10.207': [<numba.core.ir.Assign object at 0x7fa6615b0310>],
             '$24binary_add.11.208': [<numba.core.ir.Assign object at 0x7fa6615b0460>],
             '$26call_function.12.209': [<numba.core.ir.Assign object at 0x7fa6615b0610>],
             '$28get_iter.13.210': [<numba.core.ir.Assign object at 0x7fa6615b0760>],
             '$2load_global.0.199': [<numba.core.ir.Assign object at 0x7fa6615ae460>],
             '$30for_iter.1.212': [<numba.core.ir.Assign object at 0x7fa6615b0a60>],
             '$30for_iter.2.213': [<numba.core.ir.Assign object at 0x7fa6615b0b80>],
             '$30for_iter.3.214': [<numba.core.ir.Assign object at 0x7fa6615b0ca0>],
             '$42binary_add.11': [<numba.core.ir.Assign object at 0x7fa661595c70>],
             '$42return_value.1.217': [<numba.core.ir.Assign object at 0x7fa6615b3640>],
             '$48load_global.13': [<numba.core.ir.Assign object at 0x7fa6615970d0>],
             '$54call_function.16': [<numba.core.ir.Assign object at 0x7fa6615974c0>],
             '$56get_iter.17': [<numba.core.ir.Assign object at 0x7fa661597610>],
             '$58for_iter.2': [<numba.core.ir.Assign object at 0x7fa6615971f0>],
             '$58for_iter.4': [<numba.core.ir.Assign object at 0x7fa6615977f0>],
             '$76binary_subscr.10': [<numba.core.ir.Assign object at 0x7fa661599550>],
             '$78load_global.11': [<numba.core.ir.Assign object at 0x7fa6615996d0>],
             '$84binary_subscr.14': [<numba.core.ir.Assign object at 0x7fa661599a90>],
             '$8binary_subscr.3.201': [<numba.core.ir.Assign object at 0x7fa6615ae880>],
             '$90binary_subscr.17': [<numba.core.ir.Assign object at 0x7fa661599e50>],
             '$92binary_add.18': [<numba.core.ir.Assign object at 0x7fa661599fd0>],
             '$98binary_subscr.21': [<numba.core.ir.Assign object at 0x7fa66159b3d0>],
             '$const12.5.202': [<numba.core.ir.Assign object at 0x7fa6615aeb20>],
             '$const20.9.206': [<numba.core.ir.Assign object at 0x7fa6615b0160>],
             '$const40.0.216': [<numba.core.ir.Assign object at 0x7fa6615b34c0>],
             '$const40.10': [<numba.core.ir.Assign object at 0x7fa661595af0>],
             '$const6.2.200': [<numba.core.ir.Assign object at 0x7fa6615ae700>],
             '$j.185': [<numba.core.ir.Assign object at 0x7fa6615976d0>],
             '$phi30.0.211': [<numba.core.ir.Assign object at 0x7fa6615ae9a0>],
             '$phi32.1.215': [<numba.core.ir.Assign object at 0x7fa6615b0970>],
             'X__data': [<numba.core.ir.Assign object at 0x7fa6615aac10>],
             'X__indices': [<numba.core.ir.Assign object at 0x7fa6615aad30>],
             'X__indptr': [<numba.core.ir.Assign object at 0x7fa6615aae50>],
             'current__values': [<numba.core.ir.Assign object at 0x7fa6615aaf70>],
             'end': [<numba.core.ir.Assign object at 0x7fa661595df0>],
             'gains': [<numba.core.ir.Assign object at 0x7fa6615ae2e0>],
             'idx': [<numba.core.ir.Assign object at 0x7fa661595130>],
             'idxs': [<numba.core.ir.Assign object at 0x7fa6615ae0a0>],
             'k': [<numba.core.ir.Assign object at 0x7fa661597e50>],
             'max__values': [<numba.core.ir.Assign object at 0x7fa6615ae1c0>],
             'parfor__index_182': [<numba.core.ir.Assign object at 0x7fa6615b0f40>],
             'sched.198': [<numba.core.ir.Assign object at 0x7fa6615aaaf0>],
             'start': [<numba.core.ir.Assign object at 0x7fa661595610>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:matplotlib:matplotlib data path: /opt/conda/envs/py38/lib/python3.8/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:CONFIGDIR=/home/pcvishak/.config/matplotlib
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_io', 'marshal', 'posix', '_frozen_importlib_external', '_thread', '_weakref', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'google.logging', 'mpl_toolkits', 'sphinxcontrib', 'site', 'copyreg', '_struct', 'struct', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 're', '_compat_pickle', '_pickle', 'pickle', 'fnmatch', 'errno', 'zlib', '_compression', '_weakrefset', 'threading', '_bz2', 'bz2', '_lzma', 'lzma', 'pwd', 'grp', 'shutil', 'locale', 'gettext', 'argparse', 'hpbandster', 'hpbandster.core', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'Pyro4.constants', 'token', 'tokenize', 'linecache', 'traceback', 'weakref', 'collections.abc', '_string', 'string', 'atexit', 'logging', '__future__', 'platform', '_socket', 'math', 'select', 'selectors', 'socket', 'gc', '_ctypes', 'ctypes._endian', 'ctypes', '_pyio', 'signal', 'multiprocessing.process', 'array', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', '_opcode', 'opcode', 'dis', 'inspect', 'dill._shims', 'dill.settings', 'dill._dill', 'dill.source', 'dill.temp', 'dill.pointers', 'dill.detect', 'dill.objtypes', 'dill', '_posixsubprocess', 'subprocess', 'Pyro4.configuration', '_ssl', 'binascii', 'base64', 'ssl', '_uuid', 'uuid', '_bisect', 'bisect', '_sha512', '_random', 'random', 'Pyro4.errors', 'fcntl', 'Pyro4.socketutil', '_datetime', 'datetime', 'numbers', '_decimal', 'decimal', 'typing.io', 'typing.re', 'typing', 'cloudpickle.compat', 'typing_extensions', 'cloudpickle.cloudpickle', 'cloudpickle.cloudpickle_fast', 'cloudpickle', '_ast', 'ast', 'serpent', 'msgpack.exceptions', 'msgpack.ext', 'cython_runtime', 'msgpack._cmsgpack', 'msgpack', 'Pyro4.util', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'Pyro4.message', 'Pyro4.futures', 'Pyro4.core', 'Pyro4', 'Pyro4.naming', 'hpbandster.core.nameserver', 'copy', 'numpy._globals', 'numpy.__config__', 'mkl._mklinit', 'mkl._py_mkl_service', 'mkl', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'ntpath', 'urllib', 'urllib.parse', 'pathlib', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'textwrap', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_29', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'cmd', 'bdb', 'codeop', 'code', 'glob', 'pprint', 'pdb', '_queue', 'queue', 'hpbandster.core.dispatcher', 'hpbandster.core.base_iteration', 'hpbandster.core.result', 'ConfigSpace.__version__', '_cython_0_29_28', 'ConfigSpace.nx.release', 'ConfigSpace.nx.exception', 'ConfigSpace.nx.classes.graph', 'ConfigSpace.nx.classes.digraph', 'ConfigSpace.nx.classes', 'ConfigSpace.nx.algorithms.dag', 'ConfigSpace.nx.algorithms.cycles', 'ConfigSpace.nx.algorithms.components.strongly_connected', 'ConfigSpace.nx.algorithms.components', 'ConfigSpace.nx.algorithms', 'ConfigSpace.nx', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', '_cython_0_29_30', 'scipy._lib._util', 'scipy.sparse._sputils', 'scipy.sparse._base', 'scipy.sparse._sparsetools', 'scipy.sparse._data', 'scipy.sparse._index', 'scipy.sparse._compressed', 'scipy.sparse._csr', 'scipy.sparse._csc', 'scipy.sparse._csparsetools', 'scipy.sparse._lil', 'scipy.sparse._dok', 'scipy.sparse._coo', 'scipy.sparse._dia', 'scipy.sparse._bsr', 'scipy.sparse._construct', 'scipy.sparse._extract', 'scipy.sparse._matrix_io', 'scipy.sparse._arrays', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse.base', 'scipy.sparse.bsr', 'scipy.sparse.compressed', 'scipy.sparse.construct', 'scipy.sparse.coo', 'scipy.sparse.csc', 'scipy.sparse.csr', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse.dok', 'scipy.sparse.extract', 'scipy.sparse.lil', 'scipy.sparse.sparsetools', 'scipy.sparse.sputils', 'scipy.sparse', 'scipy.spatial._ckdtree', 'scipy.spatial._kdtree', 'tempfile', 'scipy._lib.messagestream', 'scipy.spatial._qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg._misc', 'scipy.linalg._cythonized_array_utils', 'scipy.linalg._flinalg', 'scipy.linalg._flinalg_py', 'scipy.linalg._decomp', 'scipy.linalg._decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg._basic', 'scipy.linalg._decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg._decomp_cholesky', 'scipy.linalg._decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg._decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg._special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg.decomp', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_lu', 'scipy.linalg.decomp_qr', 'scipy.linalg.decomp_svd', 'scipy.linalg.decomp_schur', 'scipy.linalg.basic', 'scipy.linalg.misc', 'scipy.linalg.special_matrices', 'scipy.linalg.flinalg', 'scipy.linalg.matfuncs', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special._sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special._specfun', 'scipy.special._orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special._spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special._add_newdocs', 'scipy.special.add_newdocs', 'scipy.special.basic', 'scipy.special.orthogonal', 'scipy.special.specfun', 'scipy.special.sf_error', 'scipy.special.spfun_stats', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy.spatial.qhull', 'scipy.constants._codata', 'scipy.constants._constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform._rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage._filters', 'scipy.ndimage._fourier', 'scipy.ndimage._interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage._morphology', 'scipy.ndimage._measurements', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage.morphology', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.sparse.linalg._isolve._iterative', 'scipy.sparse.linalg._interface', 'scipy.sparse.linalg._isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg._isolve.iterative', 'scipy.sparse.linalg._isolve.minres', 'scipy.sparse.linalg._isolve._gcrotmk', 'scipy.sparse.linalg._isolve.lgmres', 'scipy.sparse.linalg._isolve.lsqr', 'scipy.sparse.linalg._isolve.lsmr', 'scipy.sparse.linalg._isolve.tfqmr', 'scipy.sparse.linalg._isolve', 'scipy.sparse.linalg._dsolve._superlu', 'scipy.sparse.linalg._dsolve.linsolve', 'scipy.sparse.linalg._dsolve._add_newdocs', 'scipy.sparse.linalg._dsolve', 'scipy.sparse.linalg._eigen.arpack._arpack', 'scipy.sparse.linalg._eigen.arpack.arpack', 'scipy.sparse.linalg._eigen.arpack', 'scipy.sparse.linalg._eigen.lobpcg.lobpcg', 'scipy.sparse.linalg._eigen.lobpcg', 'scipy.sparse.linalg._eigen._svds', 'scipy.sparse.linalg._eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg', 'scipy.optimize._minpack2', 'scipy.optimize._linesearch', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize._optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'numpy.linalg.lapack_lite', 'numpy.testing._private.utils', 'sysconfig', 'numpy.testing._private.extbuild', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize._lbfgsb_py', '_moduleTNC', 'scipy.optimize._moduleTNC', 'scipy.optimize._tnc', 'scipy.optimize._cobyla', 'scipy.optimize._cobyla_py', 'scipy.optimize._slsqp', 'scipy.optimize._slsqp_py', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize._minpack_py', 'scipy.optimize._spectral', 'scipy.optimize._nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize._zeros_py', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize.cobyla', 'scipy.optimize.lbfgsb', 'scipy.optimize.linesearch', 'scipy.optimize.minpack', 'scipy.optimize.minpack2', 'scipy.optimize.moduleTNC', 'scipy.optimize.nonlin', 'scipy.optimize.optimize', 'scipy.optimize.slsqp', 'scipy.optimize.tnc', 'scipy.optimize.zeros', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate._odepack_py', 'scipy.integrate._quadpack', 'scipy.integrate._quadpack_py', 'scipy.integrate._vode', 'scipy.integrate._dop', 'scipy.integrate._lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate.dop', 'scipy.integrate.lsoda', 'scipy.integrate.vode', 'scipy.integrate.odepack', 'scipy.integrate.quadpack', 'scipy.integrate', 'scipy.misc._common', 'scipy.misc.common', 'scipy.misc._doccer', 'scipy.misc.doccer', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate._fitpack_py', 'scipy.interpolate._polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate._fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate._interpolate', 'scipy.interpolate._rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate._ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate.fitpack', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpolate', 'scipy.interpolate.ndgriddata', 'scipy.interpolate.polyint', 'scipy.interpolate.rbf', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'hypergeom_ufunc', 'scipy.stats._boost.hypergeom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats._biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats._mstats_basic', 'scipy.stats._common', 'scipy.stats._wilcoxon_data', 'pkgutil', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'scipy._lib._docscrape', 'scipy.stats._axis_nan_policy', 'scipy.stats._bootstrap', 'scipy.stats._hypotests_pythran', 'scipy.stats._hypotests', 'scipy.stats._stats_py', 'scipy.stats._variation', 'scipy.stats._statlib', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats._morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats._mvn', 'scipy.stats._kde', 'scipy.stats._mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._unuran', 'scipy.stats._unuran.unuran_wrapper', 'scipy.stats._rvs_sampling', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats.biasedurn', 'scipy.stats.kde', 'scipy.stats.morestats', 'scipy.stats.mstats_basic', 'scipy.stats.mstats_extras', 'scipy.stats.mvn', 'scipy.stats.statlib', 'scipy.stats.stats', 'scipy.stats', 'ConfigSpace.hyperparameters', 'ConfigSpace.conditions', 'ConfigSpace.forbidden', 'ConfigSpace.exceptions', 'ConfigSpace.c_util', 'ConfigSpace.configuration_space', 'ConfigSpace', 'hpbandster.core.master', 'hpbandster.optimizers.iterations.successivehalving', 'hpbandster.optimizers.iterations', 'hpbandster.core.base_config_generator', 'hpbandster.optimizers.config_generators.random_sampling', 'hpbandster.optimizers.config_generators', 'hpbandster.optimizers.randomsearch', 'hpbandster.optimizers.hyperband', 'ConfigSpace.util', 'statsmodels._version', 'statsmodels', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'dateutil._version', 'dateutil', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'six', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'calendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pyarrow._generated_version', 'pyarrow.util', 'pyarrow.lib', 'pyarrow._hdfsio', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'unicodedata', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow._compute_docstrings', 'pyarrow.vendored', 'pyarrow.vendored.docscrape', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'mmap', 'zipfile', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'statsmodels.tools.data', 'statsmodels.tools.validation.validation', 'statsmodels.tools.validation', 'statsmodels.tools.tools', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'statsmodels.tools._testing', 'statsmodels.tools', 'statsmodels.compat.python', 'statsmodels.compat', 'urllib.response', 'urllib.error', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.request', 'statsmodels.datasets.utils', 'statsmodels.datasets.anes96.data', 'statsmodels.datasets.anes96', 'statsmodels.datasets.cancer.data', 'statsmodels.datasets.cancer', 'statsmodels.datasets.ccard.data', 'statsmodels.datasets.ccard', 'statsmodels.datasets.china_smoking.data', 'statsmodels.datasets.china_smoking', 'statsmodels.datasets.co2.data', 'statsmodels.datasets.co2', 'statsmodels.datasets.committee.data', 'statsmodels.datasets.committee', 'statsmodels.datasets.copper.data', 'statsmodels.datasets.copper', 'statsmodels.datasets.cpunish.data', 'statsmodels.datasets.cpunish', 'statsmodels.datasets.danish_data.data', 'statsmodels.datasets.danish_data', 'statsmodels.datasets.elnino.data', 'statsmodels.datasets.elnino', 'statsmodels.datasets.engel.data', 'statsmodels.datasets.engel', 'statsmodels.datasets.fair.data', 'statsmodels.datasets.fair', 'statsmodels.datasets.fertility.data', 'statsmodels.datasets.fertility', 'statsmodels.datasets.grunfeld.data', 'statsmodels.datasets.grunfeld', 'statsmodels.datasets.heart.data', 'statsmodels.datasets.heart', 'statsmodels.datasets.interest_inflation.data', 'statsmodels.datasets.interest_inflation', 'statsmodels.datasets.longley.data', 'statsmodels.datasets.longley', 'statsmodels.datasets.macrodata.data', 'statsmodels.datasets.macrodata', 'statsmodels.datasets.modechoice.data', 'statsmodels.datasets.modechoice', 'statsmodels.datasets.nile.data', 'statsmodels.datasets.nile', 'statsmodels.datasets.randhie.data', 'statsmodels.datasets.randhie', 'statsmodels.datasets.scotland.data', 'statsmodels.datasets.scotland', 'statsmodels.datasets.spector.data', 'statsmodels.datasets.spector', 'statsmodels.datasets.stackloss.data', 'statsmodels.datasets.stackloss', 'statsmodels.datasets.star98.data', 'statsmodels.datasets.star98', 'statsmodels.datasets.statecrime.data', 'statsmodels.datasets.statecrime', 'statsmodels.datasets.strikes.data', 'statsmodels.datasets.strikes', 'statsmodels.datasets.sunspots.data', 'statsmodels.datasets.sunspots', 'statsmodels.datasets', 'statsmodels.distributions.empirical_distribution', 'statsmodels.distributions.edgeworth', 'statsmodels.base', 'statsmodels.tools.sm_exceptions', 'statsmodels.compat.pandas', 'statsmodels.tools.decorators', 'statsmodels.base.data', 'statsmodels.base.optimizer', 'statsmodels.base.wrapper', 'patsy.version', 'patsy.origin', 'patsy.compat', 'patsy.util', 'patsy.infix_parser', 'patsy.tokens', 'patsy.parse_formula', 'patsy.constraint', 'patsy.contrasts', 'patsy.categorical', 'patsy.state', 'patsy.splines', 'patsy.mgcv_cubic_splines', 'patsy.builtins', 'patsy.eval', 'patsy.desc', 'patsy.design_info', 'patsy.redundancy', 'patsy.missing', 'patsy.build', 'patsy.highlevel', 'patsy.user_util', 'patsy', 'statsmodels.formula.formulatools', 'statsmodels.formula', 'statsmodels.stats', 'statsmodels.iolib.openfile', 'statsmodels.iolib.foreign', 'statsmodels.iolib.table', 'statsmodels.iolib.smpickle', 'statsmodels.iolib', 'statsmodels.iolib.tableformatting', 'statsmodels.iolib.summary2', 'statsmodels.stats._knockoff', 'statsmodels.stats.multitest', 'statsmodels.stats.contrast', 'statsmodels.tools.numdiff', 'statsmodels.base.model', 'statsmodels.distributions.discrete', 'statsmodels.distributions', 'statsmodels.emplike', 'statsmodels.graphics', 'statsmodels.graphics.utils', 'statsmodels.emplike.descriptive', 'statsmodels.emplike.elregress', 'statsmodels.regression._prediction', 'statsmodels.regression.linear_model', 'statsmodels.regression', 'statsmodels.robust.norms', 'statsmodels.robust._qn', 'statsmodels.robust.scale', 'statsmodels.robust', 'statsmodels.__init__', 'statsmodels.discrete', 'statsmodels.base.l1_solvers_common', 'statsmodels.base.l1_slsqp', 'statsmodels.discrete.discrete_model', 'statsmodels.discrete.count_model', 'statsmodels.duration', 'statsmodels.duration.hazard_regression', 'statsmodels.duration.survfunc', 'statsmodels.duration.api', 'statsmodels.emplike.originregress', 'statsmodels.emplike.elanova', 'statsmodels.emplike.aft_el', 'statsmodels.emplike.api', 'statsmodels.base._penalties', 'statsmodels.regression.mixed_linear_model', 'statsmodels.genmod', 'statsmodels.genmod._prediction', 'statsmodels.graphics._regressionplots_doc', 'statsmodels.regression._tools', 'statsmodels.genmod.families.links', 'statsmodels.genmod.families.varfuncs', 'statsmodels.genmod.families.family', 'statsmodels.genmod.families', 'statsmodels.genmod.generalized_linear_model', 'statsmodels.robust.robust_linear_model', 'statsmodels.regression.quantile_regression', 'statsmodels.stats.correlation_tools', 'statsmodels.genmod.cov_struct', 'statsmodels.discrete.discrete_margins', 'statsmodels.genmod.generalized_estimating_equations', 'statsmodels.gam', 'statsmodels.tools.linalg', 'statsmodels.base._penalized', 'statsmodels.gam.gam_penalties', 'statsmodels.gam.gam_cross_validation', 'statsmodels.gam.smooth_basis', 'statsmodels.gam.gam_cross_validation.gam_cross_validation', 'statsmodels.gam.gam_cross_validation.cross_validators', 'statsmodels.gam.generalized_additive_model', 'statsmodels.formula.api', 'statsmodels.gam.api', 'statsmodels.genmod.bayes_mixed_glm', 'statsmodels.genmod.api', 'statsmodels.tsa', 'statsmodels.compat.numpy', 'statsmodels.compat.scipy', 'scipy.signal._sigtools', 'scipy._lib._uarray._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray', 'scipy._lib.uarray', 'scipy.fft._basic', 'scipy.fft._realtransforms', 'scipy.fft._fftlog', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._pocketfft', 'scipy.fft._helper', 'scipy.fft._backend', 'scipy.fft', 'scipy.signal.windows._windows', 'scipy.signal.windows.windows', 'scipy.signal.windows', 'scipy.signal._waveforms', 'scipy.signal._max_len_seq_inner', 'scipy.signal._max_len_seq', 'scipy.signal._upfirdn_apply', 'scipy.signal._upfirdn', 'scipy.signal._spline', 'scipy.signal._bsplines', 'scipy.signal._filter_design', 'scipy.signal._fir_filter_design', 'scipy.signal._lti_conversion', 'scipy.signal._ltisys', 'timeit', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._signaltools', 'scipy.signal._savitzky_golay', 'scipy.signal._spectral', 'scipy.signal._spectral_py', 'scipy.signal._wavelets', 'scipy.signal._peak_finding_utils', 'scipy.signal._peak_finding', 'scipy.signal._czt', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.lti_conversion', 'scipy.signal.ltisys', 'scipy.signal.spectral', 'scipy.signal.signaltools', 'scipy.signal.waveforms', 'scipy.signal.wavelets', 'scipy.signal.spline', 'scipy.signal', 'statsmodels.tsa._bds', 'statsmodels.tsa._innovations', 'statsmodels.tsa.adfvalues', 'statsmodels.tsa.tsatools', 'statsmodels.tsa.stattools', 'statsmodels.graphics.tsaplots', 'statsmodels.graphics.agreement', 'statsmodels.graphics.boxplots', 'statsmodels.graphics.correlation', 'statsmodels.graphics.plottools', 'statsmodels.graphics.factorplots', 'statsmodels.multivariate', 'statsmodels.multivariate.pca', 'statsmodels.nonparametric', 'statsmodels.nonparametric.kernels', 'joblib.hashing', 'multiprocessing.util', 'joblib.disk', 'joblib.logger', 'joblib.func_inspect', 'distutils', 'distutils.version', 'joblib.backports', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.numpy_pickle', 'joblib._store_backends', 'joblib.memory', '_multiprocessing', 'joblib._multiprocessing_helpers', 'joblib._deprecated_my_exceptions', 'joblib.my_exceptions', 'joblib.externals', 'joblib.externals.loky._base', 'multiprocessing.connection', 'joblib.externals.loky.backend.compat_posix', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.context', 'multiprocessing.synchronize', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle.compat', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle_fast', 'joblib.externals.cloudpickle', 'joblib.externals.loky.backend.reduction', 'multiprocessing.queues', 'joblib.externals.loky.backend.queues', 'psutil._common', 'psutil._compat', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'resource', 'psutil._pslinux', 'psutil', 'joblib.externals.loky.backend.utils', 'joblib.externals.loky.initializers', 'concurrent.futures.process', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky', 'runpy', 'joblib.externals.loky.backend.spawn', 'joblib.externals.loky.backend.resource_tracker', 'joblib._memmapping_reducer', 'multiprocessing.pool', 'joblib.pool', 'joblib.executor', 'joblib._parallel_backends', 'joblib.parallel', 'joblib', 'statsmodels.nonparametric._kernel_base', 'statsmodels.nonparametric.kernel_density', 'statsmodels.graphics.functional', 'statsmodels.graphics.gofplots', 'statsmodels.nonparametric._smoothers_lowess', 'statsmodels.nonparametric.smoothers_lowess', 'statsmodels.sandbox', 'statsmodels.sandbox.regression', 'statsmodels.sandbox.regression.predstd', 'statsmodels.graphics.regressionplots', 'statsmodels.graphics.api', 'statsmodels.imputation', 'statsmodels.imputation.bayes_mi', 'statsmodels.imputation.mice', 'statsmodels.multivariate.multivariate_ols', 'statsmodels.multivariate.manova', 'statsmodels.multivariate.factor_rotation._analytic_rotation', 'statsmodels.multivariate.factor_rotation._gpa_rotation', 'statsmodels.multivariate.factor_rotation._wrappers', 'statsmodels.multivariate.factor_rotation', 'statsmodels.multivariate.factor', 'statsmodels.multivariate.cancorr', 'statsmodels.multivariate.api', 'statsmodels.sandbox.nonparametric', 'statsmodels.sandbox.nonparametric.kernels', 'statsmodels.nonparametric.bandwidths', 'statsmodels.nonparametric.kdetools', 'statsmodels.nonparametric.linbin', 'statsmodels.nonparametric.kde', 'statsmodels.nonparametric.kernel_regression', 'statsmodels.nonparametric.kernels_asymmetric', 'statsmodels.nonparametric.api', 'statsmodels.tsa.statespace', 'statsmodels.tools.eval_measures', 'statsmodels.tsa.base', 'statsmodels.tsa.base.prediction', 'statsmodels.tsa.base.tsa_model', 'statsmodels.iolib.summary', 'statsmodels.tsa.statespace.news', 'statsmodels.tsa.statespace._tools', 'statsmodels.tsa.statespace._representation', 'statsmodels.tsa.statespace._initialization', 'statsmodels.tsa.statespace._filters', 'statsmodels.tsa.statespace._filters._conventional', 'statsmodels.tsa.statespace._filters._univariate', 'statsmodels.tsa.statespace._filters._univariate_diffuse', 'statsmodels.tsa.statespace._filters._inversions', 'statsmodels.tsa.statespace._kalman_filter', 'statsmodels.tsa.statespace._smoothers', 'statsmodels.tsa.statespace._smoothers._conventional', 'statsmodels.tsa.statespace._smoothers._univariate', 'statsmodels.tsa.statespace._smoothers._univariate_diffuse', 'statsmodels.tsa.statespace._smoothers._classical', 'statsmodels.tsa.statespace._smoothers._alternative', 'statsmodels.tsa.statespace._kalman_smoother', 'statsmodels.tsa.statespace._simulation_smoother', 'statsmodels.tsa.statespace._cfa_simulation_smoother', 'statsmodels.tsa.statespace.tools', 'statsmodels.tsa.statespace.initialization', 'statsmodels.tsa.statespace.representation', 'statsmodels.tsa.statespace.kalman_filter', 'statsmodels.tsa.statespace.kalman_smoother', 'statsmodels.tsa.statespace.cfa_simulation_smoother', 'statsmodels.tsa.statespace.simulation_smoother', 'statsmodels.tsa.statespace.mlemodel', 'statsmodels.regression.recursive_ls', 'statsmodels.stats._lilliefors_critical_values', 'statsmodels.stats.tabledist', 'statsmodels.stats._lilliefors', 'statsmodels.stats._adnorm', 'statsmodels.stats.diagnostic', 'statsmodels.sandbox.stats', 'statsmodels.sandbox.stats.multicomp', 'statsmodels.stats.multicomp', 'statsmodels.stats.gof', 'statsmodels.stats.stattools', 'statsmodels.tools.grouputils', 'statsmodels.stats.moment_helpers', 'statsmodels.stats.sandwich_covariance', 'statsmodels.stats.weightstats', 'statsmodels.tools.testing', 'statsmodels.stats.base', 'statsmodels.stats.proportion', 'statsmodels.stats.rates', 'statsmodels.stats.robust_compare', 'statsmodels.stats.oneway', 'statsmodels.stats.multivariate', 'statsmodels.tools.rootfinding', 'statsmodels.stats.power', 'statsmodels.tools.docstring', 'statsmodels.stats.descriptivestats', 'statsmodels.stats.anova', 'statsmodels.stats.inter_rater', 'statsmodels.stats.oaxaca', 'statsmodels.sandbox.stats.runs', 'statsmodels.stats.contingency_tables', 'statsmodels.stats.mediation', 'statsmodels.stats.meta_analysis', 'statsmodels.stats.api', 'statsmodels.tools.print_version', 'shlex', 'webbrowser', 'statsmodels.tools.web', 'statsmodels.tsa.interp.denton', 'statsmodels.tsa.interp', 'statsmodels.tsa.vector_ar', 'statsmodels.tsa.arima_process', 'statsmodels.tsa.deterministic', 'statsmodels.tsa.ar_model', 'statsmodels.tsa.ardl.pss_critical_values', 'statsmodels.tsa.ardl.model', 'statsmodels.tsa.ardl', 'statsmodels.tsa.arima', 'statsmodels.tsa.arima.tools', 'statsmodels.tsa.arima.specification', 'statsmodels.tsa.arima.params', 'statsmodels.tsa.statespace.sarimax', 'statsmodels.tsa.arima.estimators', 'statsmodels.tsa.arima.estimators.yule_walker', 'statsmodels.tsa.arima.estimators.burg', 'statsmodels.tsa.arima.estimators.hannan_rissanen', 'statsmodels.tsa.innovations', 'statsmodels.tsa.innovations._arma_innovations', 'statsmodels.tsa.innovations.arma_innovations', 'statsmodels.tsa.arima.estimators.innovations', 'statsmodels.tsa.arima.estimators.statespace', 'statsmodels.tsa.arima.estimators.gls', 'statsmodels.tsa.arima.model', 'statsmodels.tsa.arima.api', 'statsmodels.tsa.base.datetools', 'statsmodels.tsa.exponential_smoothing', 'statsmodels.base.covtype', 'statsmodels.tsa.exponential_smoothing.base', '_cython_0_29_27', 'statsmodels.tsa.exponential_smoothing._ets_smooth', 'statsmodels.tsa.exponential_smoothing.initialization', 'statsmodels.tsa.exponential_smoothing.ets', 'statsmodels.tsa.filters', 'statsmodels.tsa.filters.bk_filter', 'statsmodels.tsa.filters.hp_filter', 'statsmodels.tsa.filters.cf_filter', 'scipy.fftpack._helper', 'scipy.fftpack._basic', 'scipy.fftpack.convolve', 'scipy.fftpack._pseudo_diffs', 'scipy.fftpack._realtransforms', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.realtransforms', 'scipy.fftpack', 'statsmodels.tsa.filters.filtertools', 'statsmodels.tsa.filters.api', 'statsmodels.tsa.forecasting', 'statsmodels.tsa._stl', 'statsmodels.tsa.seasonal', 'statsmodels.tsa.forecasting.stl', 'statsmodels.tsa.holtwinters._exponential_smoothers', 'statsmodels.tsa.holtwinters._smoothers', 'statsmodels.tsa.holtwinters.results', 'statsmodels.tsa.holtwinters.model', 'statsmodels.tsa.holtwinters', 'statsmodels.tsa.innovations.api', 'statsmodels.tsa.regime_switching', 'statsmodels.tsa.regime_switching._hamilton_filter', 'statsmodels.tsa.regime_switching._kim_smoother', 'statsmodels.tsa.regime_switching.markov_switching', 'statsmodels.tsa.regime_switching.markov_regression', 'statsmodels.tsa.regime_switching.markov_autoregression', 'statsmodels.tsa.statespace.exponential_smoothing', 'statsmodels.tsa.statespace.api', 'statsmodels.tsa.vector_ar.output', 'statsmodels.tsa.vector_ar.util', 'statsmodels.tsa.vector_ar.plotting', 'statsmodels.tsa.vector_ar.hypothesis_test_results', 'statsmodels.tsa.vector_ar.irf', 'statsmodels.tsa.vector_ar.var_model', 'statsmodels.tsa.statespace.dynamic_factor', 'statsmodels.tsa.statespace._quarterly_ar1', 'statsmodels.tsa.statespace.dynamic_factor_mq', 'statsmodels.tsa.statespace.structural', 'statsmodels.tsa.statespace.varmax', 'statsmodels.tsa.vector_ar.svar_model', 'statsmodels.tsa.coint_tables', 'statsmodels.tsa.vector_ar.vecm', 'statsmodels.tsa.x13', 'statsmodels.tsa.api', 'statsmodels.api', 'hpbandster.optimizers.config_generators.bohb', 'hpbandster.optimizers.bohb', 'hpbandster.optimizers.kde', 'hpbandster.optimizers.kde.kernels', 'hpbandster.optimizers.kde.mvkde', 'hpbandster.optimizers.config_generators.h2bo', 'hpbandster.optimizers.h2bo', 'hpbandster.optimizers', 'example_5_pytorch_worker', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch.torch_version', 'torch._six', 'torch._C._onnx', 'torch._C._jit', 'torch._C._jit_tree_views', 'torch._C._te', 'torch._C._nvfuser', 'torch._C._monitor', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._lazy', 'torch._C._lazy_ts_backend', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch._C._fft', 'torch._C._linalg', 'torch._C._nn', 'torch._C._return_types', 'torch._C._sparse', 'torch._C._special', 'torch._namedtensor_internals', 'torch.utils.throughput_benchmark', 'torch.utils._crash_handler', 'torch.utils', 'torch.utils._mode_utils', 'torch.overrides', 'torch.utils.hooks', 'torch._tensor', 'torch.types', 'torch.storage', 'torch.random', 'tarfile', 'torch._sources', 'torch.serialization', 'torch._tensor_str', 'torch.amp.autocast_mode', 'torch.amp', 'torch.cuda._utils', 'torch.cuda.graphs', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.common', 'torch.cuda.amp.grad_scaler', 'torch.cuda.amp', 'torch.cuda.jiterator', 'torch.cuda', 'torch.sparse', 'torch.nn.parameter', 'torch.nn.modules.module', 'torch._VF', 'torch._torch_docs', 'torch._C._distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.distributed_c10d', 'torch.distributed.remote_device', 'torch.distributed', 'torch._C._distributed_rpc', 'torch.futures', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.constants', 'torch.distributed.rpc._utils', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.functions', 'torch._C._distributed_autograd', 'torch.distributed.autograd', 'torch.distributed.rpc.options', 'torch.autograd.variable', 'torch.autograd.function', 'torch.testing._comparison', 'torch.testing._creation', 'torch.testing._legacy', 'torch.testing._deprecated', 'torch.testing', 'torch.utils._pytree', 'torch._vmap_internals', 'torch.autograd.gradcheck', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.forward_ad', 'torch.autograd.functional', 'torch.autograd.graph', 'torch._C._autograd', 'torch.autograd.profiler_util', 'torch.autograd.profiler', 'torch.autograd', 'torch.autograd.profiler_legacy', 'torch.distributed.rpc.server_process_global_profiler', 'torch.distributed.rpc', 'pickletools', 'torch.package._digraph', 'torch.package._importlib', 'torch.package._mangling', 'torch.package.importer', 'torch.package._package_pickler', 'torch.package._stdlib', 'torch.package.find_file_dependencies', 'torch.package.glob_group', 'torch.package.package_exporter', 'torch.package.analyze.find_first_use_of_broken_modules', 'torch.package.analyze.trace_dependencies', 'torch.package.analyze', 'torch.package.analyze.is_from_package', 'torch.package.file_structure_representation', 'torch.package._directory_reader', 'torch.package._package_unpickler', 'torch.package.package_importer', 'torch.package', 'torch._jit_internal', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch.nn.functional', 'torch.nn.init', 'torch.nn.modules.lazy', 'torch.nn.modules.linear', 'torch.nn.common_types', 'torch.nn.modules.conv', 'torch.nn.modules.activation', 'torch.nn.modules.distance', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules._functions', 'torch.nn.modules.batchnorm', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.utils.parametrize', 'torch.nn.utils.parametrizations', 'torch.nn.utils.init', 'torch.nn.utils.stateless', 'torch.nn.utils', 'torch.nn.modules.rnn', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.modules.channelshuffle', 'torch.nn.modules', 'torch.nn.parallel.parallel_apply', 'torch.cuda.nccl', 'torch.nn.parallel.comm', 'torch.nn.parallel.replicate', 'torch.nn.parallel._functions', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel.data_parallel', 'torch.distributed.algorithms.join', 'torch.distributed.algorithms', 'torch.distributed.utils', 'torch.nn.parallel._replicated_tensor_ddp_utils', 'torch.nn.parallel.distributed', 'torch.nn.parallel', 'torch.nn', 'torch._linalg_utils', 'torch._lowrank', 'torch.functional', 'torch.cpu.amp.autocast_mode', 'torch.cpu.amp', 'torch.cpu', 'torch.fft', 'torch.optim.optimizer', 'torch.optim.adadelta', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.nadam', 'torch.optim.radam', 'torch.optim.rmsprop', 'torch.optim.rprop', 'torch.optim.sgd', 'torch.optim._functional', 'torch.optim.sparse_adam', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.optim.swa_utils', 'torch.optim', 'torch.optim._multi_tensor', 'multiprocessing.resource_sharer', 'torch.multiprocessing.reductions', 'torch.multiprocessing.spawn', 'torch.multiprocessing', 'torch.special', 'torch.utils.backcompat', 'torch.onnx', 'torch.jit._monkeytype_config', 'torch.jit._state', 'torch._ops', 'torch.jit.annotations', 'torch.jit.frontend', 'torch.backends', 'torch.backends.cudnn', 'torch.jit._builtins', 'torch.jit._check', 'torch.jit._recursive', 'torch.jit._fuser', 'torch.jit._serialization', 'torch._classes', 'torch.jit._script', 'torch.jit._trace', 'torch.jit._async', 'torch.jit._decomposition_utils', 'torch.jit._freeze', 'torch.jit._ir_utils', 'torch.jit', 'torch.linalg', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'tqdm.autonotebook', 'tqdm.asyncio', 'tqdm.auto', 'torch.hub', 'torch.distributions.constraints', 'torch.distributions.utils', 'torch.distributions.distribution', 'torch.distributions.exp_family', 'torch.distributions.bernoulli', 'torch.distributions.dirichlet', 'torch.distributions.beta', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.gamma', 'torch.distributions.chi2', 'torch.distributions.transforms', 'torch.distributions.constraint_registry', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.uniform', 'torch.distributions.independent', 'torch.distributions.transformed_distribution', 'torch.distributions.gumbel', 'torch.distributions.half_cauchy', 'torch.distributions.normal', 'torch.distributions.half_normal', 'torch.distributions.laplace', 'torch.distributions.multivariate_normal', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.kl', 'torch.distributions.kumaraswamy', 'torch.distributions.lkj_cholesky', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.distributions.wishart', 'torch.distributions', 'torch.backends.cuda', 'torch.backends.mps', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.utils.data.sampler', 'torch.utils.data.dataset', 'torch.utils.data.datapipes._typing', 'torch.utils.data.datapipes.utils', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.utils.data._utils', 'torch.utils.data._utils.serialization', 'torch.utils.data.datapipes.utils.common', 'torch.utils.data.datapipes.datapipe', 'torch.utils.data.datapipes.iter.utils', 'torch.utils.data.datapipes._decorator', 'torch.utils.data.datapipes.iter.callable', 'torch.utils.data.datapipes.iter.combinatorics', 'torch.utils.data.datapipes.iter.combining', 'torch.utils.data.datapipes.iter.filelister', 'torch.utils.data.datapipes.iter.fileopener', 'torch.utils.data.datapipes.iter.grouping', 'torch.utils.data.datapipes.utils.decoder', 'torch.utils.data.datapipes.iter.routeddecoder', 'torch.utils.data.datapipes.dataframe.structures', 'torch.utils.data.datapipes.dataframe.dataframes', 'torch.utils.data.datapipes.dataframe.dataframe_wrapper', 'torch.utils.data.datapipes.dataframe.datapipes', 'torch.utils.data.datapipes.dataframe', 'torch.utils.data.datapipes.iter.selecting', 'torch.utils.data.datapipes.iter.streamreader', 'torch.utils.data.datapipes.iter', 'torch.utils.data.datapipes.map.callable', 'torch.utils.data.datapipes.map.combinatorics', 'torch.utils.data.datapipes.map.combining', 'torch.utils.data.datapipes.map.grouping', 'torch.utils.data.datapipes.map.utils', 'torch.utils.data.datapipes.map', 'torch.utils.data.datapipes', 'torch.utils.data.graph', 'torch.utils.data.graph_settings', 'torch.utils.data.dataloader', 'torch.utils.data.distributed', 'torch.utils.data.backward_compatibility', 'torch.utils.data.communication.eventloop', 'torch.utils.data.communication.iter', 'torch.utils.data.communication.map', 'torch.utils.data.communication.messages', 'torch.utils.data.communication.protocol', 'torch.utils.data.communication.queue', 'torch.utils.data.communication', 'torch.utils.data.dataloader_experimental', 'torch.utils.data', 'torch.__config__', 'torch.__future__', 'torch.profiler.profiler', 'torch.profiler', 'torch.nn.intrinsic.modules.fused', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.modules.dropout', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.qat.modules.embedding_ops', 'torch.nn.qat.modules', 'torch.nn.qat', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.intrinsic.qat.modules.linear_fused', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat', 'torch.nn.quantized.modules.conv', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.embedding_ops', 'torch.nn.quantized.modules.functional_modules', 'torch.nn.quantized.modules', 'torch.nn.quantized', 'torch.nn.quantizable.modules.activation', 'torch.nn.quantizable.modules.rnn', 'torch.nn.quantizable.modules', 'torch.nn.quantizable', 'torch.ao', 'torch._tensor_docs', 'torch._storage_docs', 'torch.ao.quantization.quant_type', 'torch.ao.quantization.utils', 'torch.ao.quantization.observer', 'torch.ao.quantization.fake_quantize', 'torch.ao.quantization.fuser_method_mappings', 'torch.ao.quantization.fuse_modules', 'torch.ao.quantization.qconfig', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.nn.quantized.dynamic.modules.conv', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic', 'torch.nn.intrinsic.quantized.dynamic.modules.linear_relu', 'torch.nn.intrinsic.quantized.dynamic.modules', 'torch.nn.intrinsic.quantized.dynamic', 'torch.nn.quantized._reference.modules.utils', 'torch.nn.quantized._reference.modules.linear', 'torch.nn.quantized._reference.modules.conv', 'torch.nn.quantized._reference.modules.rnn', 'torch.nn.quantized._reference.modules.sparse', 'torch.nn.quantized._reference.modules', 'torch.nn.quantized._reference', 'torch.nn.qat.dynamic.modules.linear', 'torch.nn.qat.dynamic.modules', 'torch.nn.qat.dynamic', 'torch.ao.nn.sparse.quantized.linear', 'torch.ao.nn.sparse.quantized.utils', 'torch.ao.nn.sparse.quantized.dynamic.linear', 'torch.ao.nn.sparse.quantized.dynamic', 'torch.ao.nn.sparse.quantized', 'torch.ao.nn.sparse', 'torch.ao.nn', 'torch.ao.quantization.stubs', 'torch.ao.quantization.quantization_mappings', 'torch.ao.quantization.quantize', 'torch.ao.quantization.quantize_jit', 'torch.ao.quantization', 'torch.quantization.quantize', 'torch.quantization.observer', 'torch.quantization.qconfig', 'torch.quantization.fake_quantize', 'torch.quantization.fuser_method_mappings', 'torch.quantization.fuse_modules', 'torch.quantization.stubs', 'torch.quantization.quant_type', 'torch.quantization.quantize_jit', 'torch.quantization.quantization_mappings', 'torch.quantization', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'torch.utils.dlpack', 'torch._masked._docs', 'torch._masked', 'torch.return_types', 'torch.library', 'torch._prims.utils', 'torch._prims', 'torch._meta_registrations', 'torch', 'PIL._version', 'PIL', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageColor', 'PIL.ImageDraw', 'PIL._imagingft', 'PIL.ImageFont', 'torchvision.utils', 'torchvision._internally_replaced_utils', 'torchvision.extension', 'torchvision.io._load_gpu_decoder', 'fractions', 'torchvision.io._video_opt', 'torchvision.io.image', 'torchvision.io.video', 'torchvision.io.video_reader', 'torchvision.io', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'brotli.brotli', 'brotli', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'mimetypes', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookiejar', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests.__version__', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.auth', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'torch.utils.model_zoo', 'torchvision.datasets.utils', 'torchvision.datasets.vision', 'torchvision.datasets._optical_flow', 'torchvision.datasets.caltech', 'torchvision.datasets.celeba', 'torchvision.datasets.cifar', 'torchvision.datasets.cityscapes', 'torchvision.datasets.clevr', 'torchvision.datasets.coco', 'torchvision.datasets.folder', 'torchvision.datasets.country211', 'torchvision.datasets.dtd', 'torchvision.datasets.eurosat', 'PIL.ImageOps', 'PIL.ImageFilter', 'PIL.ImageStat', 'PIL.ImageEnhance', 'torchvision.transforms._pil_constants', 'torchvision.transforms.functional_pil', 'torchvision.transforms.functional_tensor', 'torchvision.transforms.functional', 'torchvision.transforms.transforms', 'torchvision.transforms.autoaugment', 'torchvision.transforms', 'torchvision.datasets.fakedata', 'torchvision.datasets.fer2013', 'torchvision.datasets.fgvc_aircraft', 'html.entities', 'html', '_markupbase', 'html.parser', 'torchvision.datasets.flickr', 'torchvision.datasets.flowers102', 'torchvision.datasets.food101', 'torchvision.datasets.gtsrb', 'torchvision.datasets.video_utils', 'torchvision.datasets.hmdb51', 'torchvision.datasets.imagenet', 'torchvision.datasets.inaturalist', 'torchvision.datasets.kinetics', 'torchvision.datasets.kitti', 'torchvision.datasets.lfw', 'torchvision.datasets.lsun', 'torchvision.datasets.mnist', 'torchvision.datasets.omniglot', 'torchvision.datasets.oxford_iiit_pet', 'torchvision.datasets.pcam', 'torchvision.datasets.phototour', 'torchvision.datasets.places365', 'torchvision.datasets.rendered_sst2', 'torchvision.datasets.sbd', 'torchvision.datasets.sbu', 'torchvision.datasets.semeion', 'torchvision.datasets.stanford_cars', 'torchvision.datasets.stl10', 'torchvision.datasets.sun397', 'torchvision.datasets.svhn', 'torchvision.datasets.ucf101', 'torchvision.datasets.usps', 'xml', 'xml.etree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'xml.etree.ElementTree', 'torchvision.datasets.voc', 'torchvision.datasets.widerface', 'torchvision.datasets', 'torchvision.transforms._presets', 'torchvision._utils', 'torchvision.models._api', 'torchvision.models._meta', 'torchvision.models._utils', 'torchvision.models.alexnet', 'torchvision.ops._register_onnx_ops', 'torchvision.ops._box_convert', 'torchvision.ops._utils', 'torchvision.ops.boxes', 'torchvision.ops.diou_loss', 'torchvision.ops.ciou_loss', 'torchvision.ops.deform_conv', 'torch.fx._compatibility', 'torch.fx.immutable_collections', 'torch.fx.operator_schemas', 'torch.fx.node', 'torch.fx._pytree', 'torch.fx.graph', 'torch.fx.graph_module', 'torch.fx.proxy', 'torch.fx._symbolic_trace', 'torch.fx.interpreter', 'torch.fx.subgraph_rewriter', 'torch.fx', 'torchvision.ops.drop_block', 'torchvision.ops.misc', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops.focal_loss', 'torchvision.ops.giou_loss', 'torchvision.ops.roi_align', 'torchvision.ops.poolers', 'torchvision.ops.ps_roi_align', 'torchvision.ops.ps_roi_pool', 'torchvision.ops.roi_pool', 'torchvision.ops.stochastic_depth', 'torch.onnx._constants', 'torch.onnx._globals', 'torch.onnx._patch_torch', 'torch.onnx.symbolic_helper', 'torch.onnx.symbolic_opset9', 'torch.onnx.symbolic_opset10', 'torch.onnx.symbolic_registry', 'torch.onnx.symbolic_caffe2', 'torch.onnx.utils', 'torch.onnx.symbolic_opset11', 'torchvision.ops', 'torchvision.models.convnext', 'torch.utils.checkpoint', 'torchvision.models.densenet', 'torchvision.models.efficientnet', 'torchvision.models.googlenet', 'torchvision.models.inception', 'torchvision.models.mnasnet', 'torchvision.models.mobilenetv2', 'torchvision.models.mobilenetv3', 'torchvision.models.mobilenet', 'torchvision.models.regnet', 'torchvision.models.resnet', 'torchvision.models.shufflenetv2', 'torchvision.models.squeezenet', 'torchvision.models.vgg', 'torchvision.models.vision_transformer', 'torchvision.models.swin_transformer', 'torchvision.models.detection._utils', 'torchvision.models.detection.image_list', 'torchvision.models.detection.anchor_utils', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.rpn', 'torchvision.models.detection.transform', 'torchvision.models.detection.faster_rcnn', 'torchvision.models.detection.fcos', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.retinanet', 'torchvision.models.detection.ssd', 'torchvision.models.detection.ssdlite', 'torchvision.models.detection', 'torchvision.models.optical_flow._utils', 'torchvision.models.optical_flow.raft', 'torchvision.models.optical_flow', 'torchvision.models.quantization.utils', 'torchvision.models.quantization.googlenet', 'torchvision.models.quantization.inception', 'torchvision.models.quantization.mobilenetv2', 'torchvision.models.quantization.mobilenetv3', 'torchvision.models.quantization.mobilenet', 'torchvision.models.quantization.resnet', 'torchvision.models.quantization.shufflenetv2', 'torchvision.models.quantization', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation.lraspp', 'torchvision.models.segmentation', 'torchvision.models.video.resnet', 'torchvision.models.video', 'torchvision.models', 'torchvision.version', 'torchvision', 'dotmap', 'hpbandster.core.worker', 'cords', 'cords.utils.utils', 'cords.utils', 'cords.utils.data', 'cords.utils.data.dataloader', 'cords.utils.data.data_utils.weightedsubset', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build._check_build', 'sklearn.__check_build', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils._joblib', 'sklearn.exceptions', 'sklearn.utils.deprecation', 'ctypes.util', 'threadpoolctl', 'sklearn.externals', 'sklearn.externals._packaging', 'sklearn.externals._packaging._structures', 'sklearn.externals._packaging.version', 'sklearn.utils.fixes', 'sklearn.utils._estimator_html_repr', 'sklearn.utils.validation', 'sklearn.utils._bunch', 'sklearn.utils', 'sklearn.utils._tags', 'sklearn.base', 'sklearn.utils._openmp_helpers', 'sklearn.utils._show_versions', 'sklearn', 'sklearn.utils.metaestimators', 'sklearn.preprocessing._function_transformer', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.extmath', 'sklearn.utils.sparsefuncs', 'sklearn.utils._mask', 'sklearn.utils._encode', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._data', 'sklearn.utils.multiclass', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.utils.stats', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._polynomial', 'sklearn.preprocessing', 'cords.utils.data.data_utils.create_slices', 'sklearn.model_selection._split', 'sklearn.metrics._base', 'sklearn.metrics._ranking', 'sklearn.metrics._classification', 'sklearn.utils._typedefs', 'sklearn.utils._readonly_array_wrapper', 'sklearn.metrics._dist_metrics', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._supervised', 'sklearn.utils._cython_blas', 'sklearn.utils._heap', 'sklearn.utils._sorting', 'sklearn.utils._vector_sentinel', 'sklearn.metrics._pairwise_distances_reduction', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.pairwise', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics.cluster', 'sklearn.metrics._regression', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.det_curve', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.metrics', 'sklearn.model_selection._validation', 'sklearn.utils._random', 'sklearn.utils.random', 'sklearn.model_selection._search', 'sklearn.model_selection', 'cords.utils.data.data_utils.regression_data_utils', 'cords.utils.data.data_utils', 'cords.utils.data.dataloader.SL.dssdataloader', 'cords.utils.data.dataloader.SL', 'cords.utils.data.dataloader.SL.adaptive', 'cords.utils.data.dataloader.SL.adaptive.adaptivedataloader', 'cords.utils.data.dataloader.SL.adaptive.glisterdataloader', 'cords.selectionstrategies', 'cords.selectionstrategies.SL', 'sklearn.neighbors._partition_nodes', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._distance_metric', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._graph', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._nmf', 'sklearn.decomposition._base', 'sklearn.utils._arpack', 'sklearn.decomposition._pca', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.utils._seq_dataset', 'sklearn.linear_model._base', 'sklearn.linear_model._bayes', 'sklearn.utils.arrayfuncs', 'sklearn.linear_model._least_angle', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._coordinate_descent', 'sklearn._loss._loss', 'sklearn._loss.link', 'sklearn._loss.loss', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.utils.optimize', 'sklearn.linear_model._linear_loss', 'sklearn.linear_model._glm.glm', 'sklearn.linear_model._glm', 'sklearn.linear_model._huber', 'sklearn.utils._weight_vector', 'sklearn.linear_model._sgd_fast', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._sag', 'sklearn.linear_model._ridge', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._base', 'sklearn.svm._classes', 'sklearn.svm._bounds', 'sklearn.svm', 'sklearn.linear_model._logistic', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._quantile', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.linear_model', 'sklearn.decomposition._dict_learning', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._online_lda_fast', 'sklearn.decomposition._lda', 'sklearn.decomposition', 'sklearn.neighbors._nca', 'sklearn.neighbors', 'apricot.utils', 'apricot.optimizers', 'apricot.functions.base', 'numba._version', 'numba.misc', 'numba.misc.init_utils', 'numba.core', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'llvmlite._version', 'llvmlite', 'llvmlite.binding.common', 'llvmlite.utils', 'xml.parsers', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'llvmlite.binding.ffi', 'llvmlite.binding.dylib', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.executionengine', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.module', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.ir._utils', 'llvmlite.ir.types', 'llvmlite.ir.values', 'llvmlite.ir.context', 'llvmlite.ir.module', 'llvmlite.ir.instructions', 'llvmlite.ir.builder', 'llvmlite.ir.transforms', 'llvmlite.ir', 'llvmlite.binding.analysis', 'llvmlite.binding', 'numba.core.config', 'numba.core.utils', 'numba.core.types.abstract', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'numba.core.errors', 'numba.core.types.common', 'numba.core.typeconv.castgraph', 'numba.core.typeconv', 'numba.core.consts', 'numba.core.ir', 'numba.core.types.misc', 'numba.core.types.containers', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.scalars', 'numba.core.types.function_type', 'numba.core.types', 'numba.core.typeconv._typeconv', 'numba.core.typeconv.typeconv', 'numba.core.typeconv.rules', 'numba.core.targetconfig', 'numba.core.cpu_options', 'numba.core.typing.templates', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.datamodel', 'numba.core.debuginfo', 'numba.core.cgutils', 'numba.np.numpy_support', 'numba.core.typing.typeof', 'numba.core.typing.context', 'numba.core.typing', 'numba.core.typing.asnumbatype', 'numba.misc.special', 'numba.stencils', 'numba.core.imputils', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.itanium_mangler', 'numba.core.funcdesc', 'numba.core.generators', 'numba.core.removerefctpass', 'numba._dynfunc', 'numba.core.environment', 'numba.core.controlflow', 'numba.core.analysis', 'numba.core.lowering', 'numba.cloudpickle.compat', 'numba.cloudpickle.cloudpickle', 'numba.cloudpickle.cloudpickle_fast', 'numba.cloudpickle', 'numba.core.serialize', 'numba.core.pythonapi', 'numba.core.extending', 'numba.core.transforms', 'numba.core.postproc', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites', 'numba.core.ir_utils', 'numba.core.descriptors', 'numba._devicearray', 'numba._dispatcher', 'numba.core.tracing', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.cpython', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.core.interpreter', 'numba.core.bytecode', 'numba.core.event', 'numba.core.compiler_lock', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.overload_glue', 'numba.core.typing.npydecl', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.parfors.array_analysis', 'numba.parfors.parfor', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.parfors.parfor_lowering', 'numba.parfors', 'numba.core.typing.builtins', 'numba.extending', 'numba.cpython.builtins', 'numba.core.base', 'numba.core.callconv', 'numba.core.callwrapper', 'llvmlite.llvmpy.passes', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrt', 'numba.core.runtime', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.misc.llvm_pass_timings', 'numba.core.codegen', 'numba.core.intrinsics', 'numba.core.externals', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.np.ufunc_db', 'numba.core.cpu', 'numba.core.compiler_machinery', 'numba.core.ssa', 'numba.core.untyped_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.typed_passes', 'numba.core.pylowering', 'numba.core.object_mode_passes', 'numba.core.compiler', 'numba.misc.appdirs', 'numba.core.caching', 'numba.core.retarget', 'numba.core.dispatcher', 'numba.core.registry', 'numba.stencils.stencil', 'numba.core.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.wrappers', 'numba.core.target_extension', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.gufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc.array_exprs', 'numba.np.ufunc', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.boxing', 'numba.experimental.jitclass', 'numba.experimental', 'numba.core.withcontexts', 'numba.typed', 'numba', 'cffi.commontypes', 'pycparser.ply', 'pycparser.ply.yacc', 'pycparser.c_ast', 'pycparser.ply.lex', 'pycparser.c_lexer', 'pycparser.plyparser', 'pycparser.ast_transforms', 'pycparser.c_parser', 'pycparser', 'cffi.cparser', 'numba.core.typing.cffi_utils', 'numba.core.typing.cmathdecl', 'numba.core.typing.enumdecl', 'numba.core.typing.collections', 'numba.core.typing.listdecl', 'numba.core.typing.mathdecl', 'numba.core.typing.randomdecl', 'numba.core.typing.setdecl', 'numba.core.typing.dictdecl', 'numba.core.typing.arraydecl', 'numba.core.typing.npdatetime', 'numba.core.typing.ctypes_utils', 'numba.core.typing.bufproto', 'numba.core.unsafe.bytes', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython.slicing', 'numba.np.arrayobj', 'numba.cpython.randomimpl', 'numba.cpython.hashing', 'numba.cpython.unicode_support', 'numba.cpython.unicode', 'numba.cpython.charseq', 'numba.cpython.enumimpl', 'numba.cpython.heapq', 'numba.cpython.iterators', 'numba.cpython.listobj', 'numba.core.optional', 'numba.cpython.unsafe.numbers', 'numba.cpython.numbers', 'numba.cpython.rangeobj', 'numba.cpython.setobj', 'numba.cpython.tupleobj', 'numba.misc.gdb_hook', 'numba.misc.literal', 'numba.np.linalg', 'numba.np.polynomial', 'numba.np.arraymath', 'numba.typed.typedobjectutils', 'numba.typed.dictobject', 'numba.typed.typeddict', 'numba.typed.dictimpl', 'numba.typed.listobject', 'numba.typed.typedlist', 'numba.core.ccallback', 'numba.experimental.function_type', 'numba.cpython.mathimpl', 'numba.cpython.cmathimpl', 'numba.np.npyfuncs', 'numba.np.npdatetime', 'numba.np.npyimpl', 'numba.cpython.printimpl', 'numba.misc.cffiimpl', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.base', 'numba.core.inline_closurecall', 'numba.core.runtime.context', 'numba.core.boxing', 'apricot.functions.featureBased', 'apricot.functions.maxCoverage', 'apricot.functions.facilityLocation', 'numba.np.ufunc.omppool', 'apricot.functions.saturatedCoverage', 'apricot.functions.sumRedundancy', 'apricot.functions.graphCut', 'apricot.functions.mixture', 'apricot.functions.custom', 'apricot.functions', 'apricot', 'cords.selectionstrategies.SL.dataselectionstrategy', 'cords.selectionstrategies.SL.craigstrategy', 'cords.selectionstrategies.SL.glisterstrategy', 'cords.selectionstrategies.SL.randomstrategy', 'cords.selectionstrategies.SL.submodularselectionstrategy', 'cords.selectionstrategies.helpers.omp_solvers', 'cords.selectionstrategies.helpers.optimalWeights', 'cords.selectionstrategies.helpers', 'cords.selectionstrategies.SL.gradmatchstrategy', 'cords.selectionstrategies.SL.fixedweightstrategy', 'cords.selectionstrategies.SL.selconstrategy', 'cords.utils.data.datasets', 'cords.utils.data.datasets.SL', 'cords.utils.data.datasets.SL.builder', 'cgi', 'cords.utils.data.datasets.SL.custom_dataset_selcon', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver._cext', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/pcvishak/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/pcvishak/.cache/matplotlib/fontlist-v330.json
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: Connected to nameserver <Pyro4.core.Proxy at 0x7fa66193d160; connected IPv4; for PYRO:Pyro.NameServer@127.0.0.1:46159>
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: No dispatcher found. Waiting for one to initiate contact.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start listening for jobs
DEBUG:hpbandster:wait_for_workers trying to get the condition
INFO:hpbandster:DISPATCHER: started the 'discover_worker' thread
INFO:hpbandster:DISPATCHER: started the 'job_runner' thread
INFO:hpbandster:DISPATCHER: Pyro daemon running on 127.0.0.1:37385
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 0 currently in the pool.
INFO:hpbandster:DISPATCHER: discovered new worker, hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:HBMASTER: number of workers changed to 1
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:HBMASTER: only 1 worker(s) available, waiting for at least 1.
DEBUG:hpbandster:adjust_queue_size: lock accquired
INFO:hpbandster:HBMASTER: adjusted queue size to (0, 1)
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
INFO:hpbandster:DISPATCHER: A new worker triggered discover_worker
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Enough workers to start this run!
INFO:hpbandster:HBMASTER: starting run at 1660566277.0220087
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 0
DEBUG:hpbandster:HBMASTER: trying submitting job (0, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (0, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (0, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (0, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (0, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (0, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (0, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.4399487378499955, 'lr': 0.0074370645046973665, 'num_conv_layers': 2, 'num_fc_units': 9, 'num_filters_1': 17, 'optimizer': 'Adam', 'num_filters_2': 6}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (0, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (0, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (0, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (0, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (0, 0, 0)
kwargs: {'config': {'dropout_rate': 0.4399487378499955, 'lr': 0.0074370645046973665, 'num_conv_layers': 2, 'num_fc_units': 9, 'num_filters_1': 17, 'optimizer': 'Adam', 'num_filters_2': 6}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0701904296875, 'info': {'test accuracy': 0.9322, 'train accuracy': 0.929901123046875, 'validation accuracy': 0.9298095703125, 'number of parameters': 2553}}
exception: None

DEBUG:hpbandster:job_callback for (0, 0, 0) started
DEBUG:hpbandster:job_callback for (0, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 1 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (0, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 1
DEBUG:hpbandster:HBMASTER: trying submitting job (1, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (1, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (1, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (1, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (1, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (1, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (1, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.8941674088232615, 'lr': 2.2632959613332906e-06, 'num_conv_layers': 2, 'num_fc_units': 25, 'num_filters_1': 13, 'optimizer': 'Adam', 'num_filters_2': 11}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (1, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (1, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (1, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (1, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (1, 0, 0)
kwargs: {'config': {'dropout_rate': 0.8941674088232615, 'lr': 2.2632959613332906e-06, 'num_conv_layers': 2, 'num_fc_units': 25, 'num_filters_1': 13, 'optimizer': 'Adam', 'num_filters_2': 11}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.8836669921875, 'info': {'test accuracy': 0.1179, 'train accuracy': 0.11309814453125, 'validation accuracy': 0.1163330078125, 'number of parameters': 8588}}
exception: None

DEBUG:hpbandster:job_callback for (1, 0, 0) started
DEBUG:hpbandster:job_callback for (1, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 2 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (1, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 2
DEBUG:hpbandster:HBMASTER: trying submitting job (2, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (2, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (2, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (2, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (2, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (2, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (2, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.05652736521729103, 'lr': 3.6041049798124866e-06, 'num_conv_layers': 1, 'num_fc_units': 22, 'num_filters_1': 16, 'optimizer': 'SGD', 'sgd_momentum': 0.01831409813113606}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (2, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (2, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (2, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (2, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (2, 0, 0)
kwargs: {'config': {'dropout_rate': 0.05652736521729103, 'lr': 3.6041049798124866e-06, 'num_conv_layers': 1, 'num_fc_units': 22, 'num_filters_1': 16, 'optimizer': 'SGD', 'sgd_momentum': 0.01831409813113606}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.87109375, 'info': {'test accuracy': 0.1395, 'train accuracy': 0.132080078125, 'validation accuracy': 0.12890625, 'number of parameters': 59900}}
exception: None

DEBUG:hpbandster:job_callback for (2, 0, 0) started
DEBUG:hpbandster:job_callback for (2, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 3 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (2, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 3
DEBUG:hpbandster:HBMASTER: trying submitting job (3, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (3, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (3, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (3, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (3, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (3, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (3, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.4179297824587587, 'lr': 0.0014200517364311557, 'num_conv_layers': 3, 'num_fc_units': 115, 'num_filters_1': 58, 'optimizer': 'SGD', 'num_filters_2': 8, 'num_filters_3': 61, 'sgd_momentum': 0.7251765205300753}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (3, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (3, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (3, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (3, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (3, 0, 0)
kwargs: {'config': {'dropout_rate': 0.4179297824587587, 'lr': 0.0014200517364311557, 'num_conv_layers': 3, 'num_fc_units': 115, 'num_filters_1': 58, 'optimizer': 'SGD', 'num_filters_2': 8, 'num_filters_3': 61, 'sgd_momentum': 0.7251765205300753}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0263671875, 'info': {'test accuracy': 0.9749, 'train accuracy': 0.977203369140625, 'validation accuracy': 0.9736328125, 'number of parameters': 17507}}
exception: None

DEBUG:hpbandster:job_callback for (3, 0, 0) started
DEBUG:hpbandster:job_callback for (3, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 4 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (3, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 4
DEBUG:hpbandster:HBMASTER: trying submitting job (4, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (4, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (4, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (4, 0, 0) submitted to dispatcher
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: starting job (4, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (4, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (4, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.5550511251652818, 'lr': 1.0843468765663308e-06, 'num_conv_layers': 3, 'num_fc_units': 10, 'num_filters_1': 62, 'optimizer': 'SGD', 'num_filters_2': 16, 'num_filters_3': 6, 'sgd_momentum': 0.8034466709133465}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (4, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (4, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (4, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (4, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (4, 0, 0)
kwargs: {'config': {'dropout_rate': 0.5550511251652818, 'lr': 1.0843468765663308e-06, 'num_conv_layers': 3, 'num_fc_units': 10, 'num_filters_1': 62, 'optimizer': 'SGD', 'num_filters_2': 16, 'num_filters_3': 6, 'sgd_momentum': 0.8034466709133465}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.9010009765625, 'info': {'test accuracy': 0.0982, 'train accuracy': 0.097412109375, 'validation accuracy': 0.0989990234375, 'number of parameters': 10614}}
exception: None

DEBUG:hpbandster:job_callback for (4, 0, 0) started
DEBUG:hpbandster:job_callback for (4, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 5 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (4, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 5
DEBUG:hpbandster:HBMASTER: trying submitting job (5, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (5, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (5, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (5, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (5, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (5, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (5, 0, 0)
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.6940112849436719, 'lr': 2.015319046560276e-05, 'num_conv_layers': 1, 'num_fc_units': 21, 'num_filters_1': 12, 'optimizer': 'Adam'}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
<class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (5, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (5, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (5, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (5, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (5, 0, 0)
kwargs: {'config': {'dropout_rate': 0.6940112849436719, 'lr': 2.015319046560276e-05, 'num_conv_layers': 1, 'num_fc_units': 21, 'num_filters_1': 12, 'optimizer': 'Adam'}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0882568359375, 'info': {'test accuracy': 0.9159, 'train accuracy': 0.91229248046875, 'validation accuracy': 0.9117431640625, 'number of parameters': 42949}}
exception: None

DEBUG:hpbandster:job_callback for (5, 0, 0) started
DEBUG:hpbandster:job_callback for (5, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 6 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (5, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 6
DEBUG:hpbandster:HBMASTER: trying submitting job (6, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (6, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (6, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (6, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (6, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (6, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (6, 0, 0)
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.20581222808565305, 'lr': 0.00045639097244805295, 'num_conv_layers': 3, 'num_fc_units': 9, 'num_filters_1': 5, 'optimizer': 'Adam', 'num_filters_2': 9, 'num_filters_3': 5}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery

BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (6, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (6, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (6, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (6, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (6, 0, 0)
kwargs: {'config': {'dropout_rate': 0.20581222808565305, 'lr': 0.00045639097244805295, 'num_conv_layers': 3, 'num_fc_units': 9, 'num_filters_1': 5, 'optimizer': 'Adam', 'num_filters_2': 9, 'num_filters_3': 5}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0980224609375, 'info': {'test accuracy': 0.914, 'train accuracy': 0.907562255859375, 'validation accuracy': 0.9019775390625, 'number of parameters': 1028}}
exception: None

DEBUG:hpbandster:job_callback for (6, 0, 0) started
DEBUG:hpbandster:job_callback for (6, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 7 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (6, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 7
DEBUG:hpbandster:HBMASTER: trying submitting job (7, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (7, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (7, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (7, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (7, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (7, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (7, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.12524098526955968, 'lr': 0.0001127107900810061, 'num_conv_layers': 3, 'num_fc_units': 10, 'num_filters_1': 5, 'optimizer': 'SGD', 'num_filters_2': 11, 'num_filters_3': 6, 'sgd_momentum': 0.23254470427071627}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (7, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (7, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (7, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (7, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (7, 0, 0)
kwargs: {'config': {'dropout_rate': 0.12524098526955968, 'lr': 0.0001127107900810061, 'num_conv_layers': 3, 'num_fc_units': 10, 'num_filters_1': 5, 'optimizer': 'SGD', 'num_filters_2': 11, 'num_filters_3': 6, 'sgd_momentum': 0.23254470427071627}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.8277587890625, 'info': {'test accuracy': 0.1745, 'train accuracy': 0.17071533203125, 'validation accuracy': 0.1722412109375, 'number of parameters': 1336}}
exception: None

DEBUG:hpbandster:job_callback for (7, 0, 0) started
DEBUG:hpbandster:job_callback for (7, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 8 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (7, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 8
DEBUG:hpbandster:HBMASTER: trying submitting job (8, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (8, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (8, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (8, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (8, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (8, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (8, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.08983400765135904, 'lr': 3.4663229022231664e-05, 'num_conv_layers': 2, 'num_fc_units': 93, 'num_filters_1': 4, 'optimizer': 'Adam', 'num_filters_2': 10}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (8, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (8, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (8, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (8, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (8, 0, 0)
kwargs: {'config': {'dropout_rate': 0.08983400765135904, 'lr': 3.4663229022231664e-05, 'num_conv_layers': 2, 'num_fc_units': 93, 'num_filters_1': 4, 'optimizer': 'Adam', 'num_filters_2': 10}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0172119140625, 'info': {'test accuracy': 0.9834, 'train accuracy': 0.9864501953125, 'validation accuracy': 0.9827880859375, 'number of parameters': 24693}}
exception: None

DEBUG:hpbandster:job_callback for (8, 0, 0) started
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:job_callback for (8, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:Only 9 run(s) for budget 100.000000 available, need more than 11 -> can't build model!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (8, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 9
DEBUG:hpbandster:HBMASTER: trying submitting job (9, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (9, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (9, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (9, 0, 0) submitted to dispatcher
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: starting job (9, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (9, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (9, 0, 0)
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.021749144283164514, 'lr': 0.09701317711992524, 'num_conv_layers': 3, 'num_fc_units': 27, 'num_filters_1': 4, 'optimizer': 'SGD', 'num_filters_2': 5, 'num_filters_3': 6, 'sgd_momentum': 0.7769888247476946}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
<class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (9, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (9, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (9, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (9, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (9, 0, 0)
kwargs: {'config': {'dropout_rate': 0.021749144283164514, 'lr': 0.09701317711992524, 'num_conv_layers': 3, 'num_fc_units': 27, 'num_filters_1': 4, 'optimizer': 'SGD', 'num_filters_2': 5, 'num_filters_3': 6, 'sgd_momentum': 0.7769888247476946}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0916748046875, 'info': {'test accuracy': 0.9181, 'train accuracy': 0.914459228515625, 'validation accuracy': 0.9083251953125, 'number of parameters': 970}}
exception: None

DEBUG:hpbandster:job_callback for (9, 0, 0) started
DEBUG:hpbandster:job_callback for (9, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (9, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 10
DEBUG:hpbandster:HBMASTER: trying submitting job (10, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (10, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (10, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (10, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (10, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (10, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (10, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.49484526998478157, 'lr': 2.5764498407311647e-05, 'num_conv_layers': 3, 'num_fc_units': 180, 'num_filters_1': 5, 'optimizer': 'Adam', 'num_filters_2': 25, 'num_filters_3': 21}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery

BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (10, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (10, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (10, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (10, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (10, 0, 0)
kwargs: {'config': {'dropout_rate': 0.49484526998478157, 'lr': 2.5764498407311647e-05, 'num_conv_layers': 3, 'num_fc_units': 180, 'num_filters_1': 5, 'optimizer': 'Adam', 'num_filters_2': 25, 'num_filters_3': 21}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.072509765625, 'info': {'test accuracy': 0.9293, 'train accuracy': 0.92474365234375, 'validation accuracy': 0.927490234375, 'number of parameters': 11716}}
exception: None

DEBUG:hpbandster:job_callback for (10, 0, 0) started
DEBUG:hpbandster:job_callback for (10, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (10, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 11
DEBUG:hpbandster:HBMASTER: trying submitting job (11, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (11, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (11, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (11, 0, 0) submitted to dispatcher
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: starting job (11, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (11, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (11, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.3917700030441173, 'lr': 0.00023143957749550078, 'num_conv_layers': 2, 'num_fc_units': 93, 'num_filters_1': 32, 'optimizer': 'Adam', 'num_filters_2': 7}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (11, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (11, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (11, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (11, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (11, 0, 0)
kwargs: {'config': {'dropout_rate': 0.3917700030441173, 'lr': 0.00023143957749550078, 'num_conv_layers': 2, 'num_fc_units': 93, 'num_filters_1': 32, 'optimizer': 'Adam', 'num_filters_2': 7}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0118408203125, 'info': {'test accuracy': 0.9886, 'train accuracy': 0.99383544921875, 'validation accuracy': 0.9881591796875, 'number of parameters': 19651}}
exception: None

DEBUG:hpbandster:job_callback for (11, 0, 0) started
DEBUG:hpbandster:job_callback for (11, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (11, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 12
DEBUG:hpbandster:HBMASTER: trying submitting job (12, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (12, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (12, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (12, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (12, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (12, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (12, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.7877966534426366, 'lr': 5.844813997034349e-06, 'num_conv_layers': 3, 'num_fc_units': 16, 'num_filters_1': 11, 'optimizer': 'SGD', 'num_filters_2': 33, 'num_filters_3': 14, 'sgd_momentum': 0.49249222223788325}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (12, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (12, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (12, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (12, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (12, 0, 0)
kwargs: {'config': {'dropout_rate': 0.7877966534426366, 'lr': 5.844813997034349e-06, 'num_conv_layers': 3, 'num_fc_units': 16, 'num_filters_1': 11, 'optimizer': 'SGD', 'num_filters_2': 33, 'num_filters_3': 14, 'sgd_momentum': 0.49249222223788325}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.9010009765625, 'info': {'test accuracy': 0.0982, 'train accuracy': 0.097412109375, 'validation accuracy': 0.0989990234375, 'number of parameters': 7992}}
exception: None

DEBUG:hpbandster:job_callback for (12, 0, 0) started
DEBUG:hpbandster:job_callback for (12, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (12, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 13
DEBUG:hpbandster:HBMASTER: trying submitting job (13, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (13, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (13, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (13, 0, 0) submitted to dispatcher
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: starting job (13, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (13, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (13, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.08429955925470904, 'lr': 0.026578898332323308, 'num_conv_layers': 2, 'num_fc_units': 21, 'num_filters_1': 11, 'optimizer': 'SGD', 'num_filters_2': 8, 'sgd_momentum': 0.9242666786142907}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
<class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: done with job (13, 0, 0), trying to register it.
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: registered result for job (13, 0, 0) with dispatcher
DEBUG:hpbandster:DISPATCHER: job (13, 0, 0) finished
DEBUG:hpbandster:DISPATCHER: register_result: lock acquired
DEBUG:hpbandster:DISPATCHER: job (13, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088 finished
DEBUG:hpbandster:job_id: (13, 0, 0)
kwargs: {'config': {'dropout_rate': 0.08429955925470904, 'lr': 0.026578898332323308, 'num_conv_layers': 2, 'num_fc_units': 21, 'num_filters_1': 11, 'optimizer': 'SGD', 'num_filters_2': 8, 'sgd_momentum': 0.9242666786142907}, 'budget': 100.0, 'working_directory': '.'}
result: {'loss': 0.0181884765625, 'info': {'test accuracy': 0.9845, 'train accuracy': 0.995819091796875, 'validation accuracy': 0.9818115234375, 'number of parameters': 5351}}
exception: None

DEBUG:hpbandster:job_callback for (13, 0, 0) started
DEBUG:hpbandster:job_callback for (13, 0, 0) got condition
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 1 -> waiting!
DEBUG:hpbandster:HBMASTER: Trying to run another job!
DEBUG:hpbandster:job_callback for (13, 0, 0) finished
DEBUG:hpbandster:start sampling a new configuration.
DEBUG:hpbandster:done sampling a new configuration.
DEBUG:hpbandster:HBMASTER: schedule new run for iteration 14
DEBUG:hpbandster:HBMASTER: trying submitting job (14, 0, 0) to dispatcher
DEBUG:hpbandster:HBMASTER: submitting job (14, 0, 0) to dispatcher
DEBUG:hpbandster:DISPATCHER: trying to submit job (14, 0, 0)
DEBUG:hpbandster:DISPATCHER: trying to notify the job_runner thread.
DEBUG:hpbandster:HBMASTER: job (14, 0, 0) submitted to dispatcher
DEBUG:hpbandster:HBMASTER: running jobs: 1, queue sizes: (0, 1) -> wait
DEBUG:hpbandster:DISPATCHER: Trying to submit another job.
DEBUG:hpbandster:DISPATCHER: starting job (14, 0, 0) on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: job (14, 0, 0) dispatched on hpbandster.run_None.worker.vishak-p1.28412140355746785088
DEBUG:hpbandster:DISPATCHER: jobs to submit = 0, number of idle workers = 0 -> waiting!
INFO:hpbandster.run_None.worker.vishak-p1.28412:WORKER: start processing job (14, 0, 0)
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: args: ()
DEBUG:hpbandster.run_None.worker.vishak-p1.28412:WORKER: kwargs: {'config': {'dropout_rate': 0.6689107279837494, 'lr': 4.558531824694814e-05, 'num_conv_layers': 3, 'num_fc_units': 59, 'num_filters_1': 25, 'optimizer': 'SGD', 'num_filters_2': 20, 'num_filters_3': 6, 'sgd_momentum': 0.838313965075914}, 'budget': 100.0, 'working_directory': '.'}
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery

BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  56
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  57
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  58
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  59
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  60
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  61
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  62
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  63
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  64
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  65
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  66
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  67
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  68
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  69
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  70
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  71
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  72
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  73
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  74
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  75
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  76
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  77
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  78
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  79
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  80
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  81
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  82
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  83
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  84
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  85
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  86
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  87
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  88
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  89
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  90
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  91
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  92
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  93
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  94
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  95
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  96
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  97
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  98
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  99
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  0
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  1
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  2
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  3
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  4
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  5
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  6
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  7
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  8
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  9
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  10
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  11
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  12
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  13
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  14
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  15
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  16
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  17
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  18
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  19
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  20
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  21
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  22
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  23
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  24
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  25
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  26
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  27
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  28
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  29
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  30
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  31
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  32
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  33
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  34
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  35
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  36
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  37
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  38
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  39
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  40
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  41
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  42
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  43
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  44
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  45
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  46
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  47
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  48
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  49
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  50
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  51
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  52
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  53
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  54
BUDGET IS  100.0
BUDGET TYPE IS  <class 'float'>
EPOCH IS  55
BUDGET IS  100.0
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
DEBUG:hpbandster:DISPATCHER: Starting worker discovery
DEBUG:hpbandster:DISPATCHER: Found 1 potential workers, 1 currently in the pool.
DEBUG:hpbandster:DISPATCHER: Finished worker discovery
